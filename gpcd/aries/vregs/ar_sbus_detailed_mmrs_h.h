/******************************************************************************
 * COPYRIGHT CRAY INC. ar_sbus_detailed_mmrs_h.h
 * FILE: ar_sbus_detailed_mmrs_h.h
 * Created by v2h.c on Wed Oct  8 14:39:04 2014
 ******************************************************************************/
/**
 * @file ar_sbus_detailed_mmrs_h.h
 * @author v2h.c on Wed Oct  8 14:39:04 2014
 * @section overview Overview:
 *	    Sets up ar_detailed_mmr_t and ar_detailed_mmrd_t structs for each MMR/MMR subfield with constants
 *	    found in ar_sbus_mmr_values.h and ar_sbus_defs.h. Then puts each ar_detailed_mmr_t set up
 *	    into an array. Used by the Cray MMR Access Library.
 */

#include "ar_sbus_mmr_values.h"

#ifndef _AR_SBUS_DETAILED_MMRS_H_H_
#define _AR_SBUS_DETAILED_MMRS_H_H_

#ifndef _CMMR_FR_T_
#define _CMMR_FR_T_
/**
 * @struct cmmr_fr_s
 * Gemini Detailed MMR Field Descriptor
 * @see cmmr_br_s
 *
 * The Detailed MMR Field Descriptor contains information about individual
 * fields of a MMR in an ASIC. Used by the Cray MMR Access Library.
 *
 */
typedef struct cmmr_fr_s{
	char* _name;		/**< Field name */
	uint32_t _bpos;		/**< Field bit postion relative to QW */
	uint64_t _mask;		/**< Field bit mask relative to QW */
	uint64_t _rval;		/**< Reset data relative to QW */
	uint64_t _type_bitmsk;	/**< Field Type Bit Mask */
	int _index;		/**< QW Index */
	char* _desc;		/**< Field Description */
	char* _access;		/**< Field Access */
} cmmr_fr_t; /**< cmmr_fr_s */
#endif

#ifndef _CMMR_BR_T_
#define _CMMR_BR_T_
/**
 * @struct cmmr_br_s
 * Gemini Detailed MMR Descriptor
 * @see cmmr_fr_s
 *
 * The Detailed MMR contains information about a individual MMR in an ASIC.
 * Used by the Cray MMR Access Library.
 *
 */
typedef struct cmmr_br_s{
	char* _name;			/**< MMR name */
	uint64_t _addr;			/**< MMR address */
	uint64_t _type_bitmsk;		/**< MMR Type Bit Mask */
	union{
		uint64_t val;
		uint64_t *ptr;
	} _rval;	/**< Reset data */
	union{
		uint64_t val;
		uint64_t *ptr;
	} _rmsk;	/**< Reset mask */
	union{
		uint64_t val;
		uint64_t *ptr;
	} _wrmsk;	/**< Write mask */
	union{
		uint64_t val;
		uint64_t *ptr;
	} _rdmsk;	/**< Read mask */
	union{
		uint64_t val;
		uint64_t *ptr;
	} _xsmsk;	/**< XState mask */
	union{
		uint64_t val;
		uint64_t *ptr;
	} _wsemsk;	/**< Write only with side effects */
	union{
		uint64_t val;
		uint64_t *ptr;
	} _rsemsk;	/**< Read only with side effects */
	union{
		uint64_t val;
		uint64_t *ptr;
	} _w1smsk;	/**< Write okay but only 1's stick */
	union{
		uint64_t val;
		uint64_t *ptr;
	} _w1cmsk;	/**< Write of 1 clears bit */
	union{
		uint64_t val;
		uint64_t *ptr;
	} _wrstmsk;	/**< Warm Reset Mask */
	union{
		uint64_t val;
		uint64_t *ptr;
	} _hwwmsk;	/**< Hardware Write Mask */
	union{
		uint64_t val;
		uint64_t *ptr;
	} _hwrmsk;	/**< Hardware Read Mask */
	int _nqw;			/**< Number of QW */
	int _size;			/**< Size in bytes of MMR */
	int _incr;			/**< Increment between table entries */
	int _depth;			/**< Number of MMR instances */
	const cmmr_fr_t *_info;	/**< MMR detail */
} cmmr_br_t; /**< cmmr_br_s */
#endif

static const cmmr_br_t* __ar_sbus_mmrs[];	/* SBUS Array */

/*
 *  AR SBUS MMR DETAIL DECLARATIONS
 */
static const cmmr_fr_t __ar_serdes_sbus_00_detail[] = {
    { ._name = "RESERVED_31_15",
      ._bpos = AR_SERDES_SBUS_00_RESERVED_31_15_BP,
      ._mask = AR_SERDES_SBUS_00_RESERVED_31_15_MASK,
      ._rval = AR_SERDES_SBUS_00_RSTDATA & AR_SERDES_SBUS_00_RESERVED_31_15_MASK,
      ._index = AR_SERDES_SBUS_00_RESERVED_31_15_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "TX_PHASE_SLIP_CNTL",
      ._bpos = AR_SERDES_SBUS_00_TX_PHASE_SLIP_CNTL_BP,
      ._mask = AR_SERDES_SBUS_00_TX_PHASE_SLIP_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_00_RSTDATA & AR_SERDES_SBUS_00_TX_PHASE_SLIP_CNTL_MASK,
      ._index = AR_SERDES_SBUS_00_TX_PHASE_SLIP_CNTL_QW,
      ._desc = "Overrides the i_tx_phase_slip port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_PHASE_CAL_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_00_TX_PHASE_CAL_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_00_TX_PHASE_CAL_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_00_RSTDATA & AR_SERDES_SBUS_00_TX_PHASE_CAL_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_00_TX_PHASE_CAL_EN_CNTL_QW,
      ._desc = "Overrides the i_tx_phase_cal_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_PHASE_MASTER_CNTL",
      ._bpos = AR_SERDES_SBUS_00_TX_PHASE_MASTER_CNTL_BP,
      ._mask = AR_SERDES_SBUS_00_TX_PHASE_MASTER_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_00_RSTDATA & AR_SERDES_SBUS_00_TX_PHASE_MASTER_CNTL_MASK,
      ._index = AR_SERDES_SBUS_00_TX_PHASE_MASTER_CNTL_QW,
      ._desc = "Overrides the i_tx_phase_master port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "REF_SEL_CNTL",
      ._bpos = AR_SERDES_SBUS_00_REF_SEL_CNTL_BP,
      ._mask = AR_SERDES_SBUS_00_REF_SEL_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_00_RSTDATA & AR_SERDES_SBUS_00_REF_SEL_CNTL_MASK,
      ._index = AR_SERDES_SBUS_00_REF_SEL_CNTL_QW,
      ._desc = "Overrides i_ref_sel ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "PLL_RECAL_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_00_PLL_RECAL_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_00_PLL_RECAL_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_00_RSTDATA & AR_SERDES_SBUS_00_PLL_RECAL_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_00_PLL_RECAL_EN_CNTL_QW,
      ._desc = "Overrides the i_pll_recal_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_00_RX_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_00_RX_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_00_RSTDATA & AR_SERDES_SBUS_00_RX_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_00_RX_EN_CNTL_QW,
      ._desc = "Overrides the i_rx_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_00_TX_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_00_TX_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_00_RSTDATA & AR_SERDES_SBUS_00_TX_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_00_TX_EN_CNTL_QW,
      ._desc = "Overrides the i_tx_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SBUS_CLK_GATE",
      ._bpos = AR_SERDES_SBUS_00_SBUS_CLK_GATE_BP,
      ._mask = AR_SERDES_SBUS_00_SBUS_CLK_GATE_MASK,
      ._rval = AR_SERDES_SBUS_00_RSTDATA & AR_SERDES_SBUS_00_SBUS_CLK_GATE_MASK,
      ._index = AR_SERDES_SBUS_00_SBUS_CLK_GATE_QW,
      ._desc = "Gate to override Tx/Rx enable and ref/rate sel ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_01_detail[] = {
    { ._name = "RESERVED_31_25",
      ._bpos = AR_SERDES_SBUS_01_RESERVED_31_25_BP,
      ._mask = AR_SERDES_SBUS_01_RESERVED_31_25_MASK,
      ._rval = AR_SERDES_SBUS_01_RSTDATA & AR_SERDES_SBUS_01_RESERVED_31_25_MASK,
      ._index = AR_SERDES_SBUS_01_RESERVED_31_25_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_RATE_SEL_CNTL",
      ._bpos = AR_SERDES_SBUS_01_RX_RATE_SEL_CNTL_BP,
      ._mask = AR_SERDES_SBUS_01_RX_RATE_SEL_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_01_RSTDATA & AR_SERDES_SBUS_01_RX_RATE_SEL_CNTL_MASK,
      ._index = AR_SERDES_SBUS_01_RX_RATE_SEL_CNTL_QW,
      ._desc = "Overrides i_rx_rate_sel ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RESERVED_15_9",
      ._bpos = AR_SERDES_SBUS_01_RESERVED_15_9_BP,
      ._mask = AR_SERDES_SBUS_01_RESERVED_15_9_MASK,
      ._rval = AR_SERDES_SBUS_01_RSTDATA & AR_SERDES_SBUS_01_RESERVED_15_9_MASK,
      ._index = AR_SERDES_SBUS_01_RESERVED_15_9_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "TX_RATE_SEL_CNTL",
      ._bpos = AR_SERDES_SBUS_01_TX_RATE_SEL_CNTL_BP,
      ._mask = AR_SERDES_SBUS_01_TX_RATE_SEL_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_01_RSTDATA & AR_SERDES_SBUS_01_TX_RATE_SEL_CNTL_MASK,
      ._index = AR_SERDES_SBUS_01_TX_RATE_SEL_CNTL_QW,
      ._desc = "Overrides i_tx_rate_sel ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_02_detail[] = {
    { ._name = "RESERVED_31_3",
      ._bpos = AR_SERDES_SBUS_02_RESERVED_31_3_BP,
      ._mask = AR_SERDES_SBUS_02_RESERVED_31_3_MASK,
      ._rval = AR_SERDES_SBUS_02_RSTDATA & AR_SERDES_SBUS_02_RESERVED_31_3_MASK,
      ._index = AR_SERDES_SBUS_02_RESERVED_31_3_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_RDY_OBS",
      ._bpos = AR_SERDES_SBUS_02_RX_RDY_OBS_BP,
      ._mask = AR_SERDES_SBUS_02_RX_RDY_OBS_MASK,
      ._rval = AR_SERDES_SBUS_02_RSTDATA & AR_SERDES_SBUS_02_RX_RDY_OBS_MASK,
      ._index = AR_SERDES_SBUS_02_RX_RDY_OBS_QW,
      ._desc = "Observes o_rx_rdy port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "TX_RDY_OBS",
      ._bpos = AR_SERDES_SBUS_02_TX_RDY_OBS_BP,
      ._mask = AR_SERDES_SBUS_02_TX_RDY_OBS_MASK,
      ._rval = AR_SERDES_SBUS_02_RSTDATA & AR_SERDES_SBUS_02_TX_RDY_OBS_MASK,
      ._index = AR_SERDES_SBUS_02_TX_RDY_OBS_QW,
      ._desc = "Observes o_tx_rdy port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RESERVED_0",
      ._bpos = AR_SERDES_SBUS_02_RESERVED_0_BP,
      ._mask = AR_SERDES_SBUS_02_RESERVED_0_MASK,
      ._rval = AR_SERDES_SBUS_02_RSTDATA & AR_SERDES_SBUS_02_RESERVED_0_MASK,
      ._index = AR_SERDES_SBUS_02_RESERVED_0_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_03_detail[] = {
    { ._name = "RESERVED_31_4",
      ._bpos = AR_SERDES_SBUS_03_RESERVED_31_4_BP,
      ._mask = AR_SERDES_SBUS_03_RESERVED_31_4_MASK,
      ._rval = AR_SERDES_SBUS_03_RSTDATA & AR_SERDES_SBUS_03_RESERVED_31_4_MASK,
      ._index = AR_SERDES_SBUS_03_RESERVED_31_4_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_WIDTH_MODE_CNTL",
      ._bpos = AR_SERDES_SBUS_03_RX_WIDTH_MODE_CNTL_BP,
      ._mask = AR_SERDES_SBUS_03_RX_WIDTH_MODE_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_03_RSTDATA & AR_SERDES_SBUS_03_RX_WIDTH_MODE_CNTL_MASK,
      ._index = AR_SERDES_SBUS_03_RX_WIDTH_MODE_CNTL_QW,
      ._desc = "Overrides i_rx_width_mode",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_WIDTH_MODE_CNTL",
      ._bpos = AR_SERDES_SBUS_03_TX_WIDTH_MODE_CNTL_BP,
      ._mask = AR_SERDES_SBUS_03_TX_WIDTH_MODE_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_03_RSTDATA & AR_SERDES_SBUS_03_TX_WIDTH_MODE_CNTL_MASK,
      ._index = AR_SERDES_SBUS_03_TX_WIDTH_MODE_CNTL_QW,
      ._desc = "Overrides i_tx_width_mode",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_05_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_05_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_05_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_05_RSTDATA & AR_SERDES_SBUS_05_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_05_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "TX_PHASE_OUT_OBS",
      ._bpos = AR_SERDES_SBUS_05_TX_PHASE_OUT_OBS_BP,
      ._mask = AR_SERDES_SBUS_05_TX_PHASE_OUT_OBS_MASK,
      ._rval = AR_SERDES_SBUS_05_RSTDATA & AR_SERDES_SBUS_05_TX_PHASE_OUT_OBS_MASK,
      ._index = AR_SERDES_SBUS_05_TX_PHASE_OUT_OBS_QW,
      ._desc = "Observes the o_tx_phase_out ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RESERVED_2_0",
      ._bpos = AR_SERDES_SBUS_05_RESERVED_2_0_BP,
      ._mask = AR_SERDES_SBUS_05_RESERVED_2_0_MASK,
      ._rval = AR_SERDES_SBUS_05_RSTDATA & AR_SERDES_SBUS_05_RESERVED_2_0_MASK,
      ._index = AR_SERDES_SBUS_05_RESERVED_2_0_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_06_detail[] = {
    { ._name = "RESERVED_31_6",
      ._bpos = AR_SERDES_SBUS_06_RESERVED_31_6_BP,
      ._mask = AR_SERDES_SBUS_06_RESERVED_31_6_MASK,
      ._rval = AR_SERDES_SBUS_06_RSTDATA & AR_SERDES_SBUS_06_RESERVED_31_6_MASK,
      ._index = AR_SERDES_SBUS_06_RESERVED_31_6_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "TX_PHASE_IN_CNTL",
      ._bpos = AR_SERDES_SBUS_06_TX_PHASE_IN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_06_TX_PHASE_IN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_06_RSTDATA & AR_SERDES_SBUS_06_TX_PHASE_IN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_06_TX_PHASE_IN_CNTL_QW,
      ._desc = "Overrides the i_tx_phase_in ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_PHASE_IN_GATE",
      ._bpos = AR_SERDES_SBUS_06_TX_PHASE_IN_GATE_BP,
      ._mask = AR_SERDES_SBUS_06_TX_PHASE_IN_GATE_MASK,
      ._rval = AR_SERDES_SBUS_06_RSTDATA & AR_SERDES_SBUS_06_TX_PHASE_IN_GATE_MASK,
      ._index = AR_SERDES_SBUS_06_TX_PHASE_IN_GATE_QW,
      ._desc = "Gate to override the i_tx_phase_in ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_07_detail[] = {
    { ._name = "RESERVED_31_13",
      ._bpos = AR_SERDES_SBUS_07_RESERVED_31_13_BP,
      ._mask = AR_SERDES_SBUS_07_RESERVED_31_13_MASK,
      ._rval = AR_SERDES_SBUS_07_RSTDATA & AR_SERDES_SBUS_07_RESERVED_31_13_MASK,
      ._index = AR_SERDES_SBUS_07_RESERVED_31_13_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "HALT_CNTL",
      ._bpos = AR_SERDES_SBUS_07_HALT_CNTL_BP,
      ._mask = AR_SERDES_SBUS_07_HALT_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_07_RSTDATA & AR_SERDES_SBUS_07_HALT_CNTL_MASK,
      ._index = AR_SERDES_SBUS_07_HALT_CNTL_QW,
      ._desc = "SBus override of HALT inputs of CCB",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "ALLOW_CORE_HALT_CNTL",
      ._bpos = AR_SERDES_SBUS_07_ALLOW_CORE_HALT_CNTL_BP,
      ._mask = AR_SERDES_SBUS_07_ALLOW_CORE_HALT_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_07_RSTDATA & AR_SERDES_SBUS_07_ALLOW_CORE_HALT_CNTL_MASK,
      ._index = AR_SERDES_SBUS_07_ALLOW_CORE_HALT_CNTL_QW,
      ._desc = "When asserted, I_HALT is used to control the HALT input of the CC blocks",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RESERVED_3_0",
      ._bpos = AR_SERDES_SBUS_07_RESERVED_3_0_BP,
      ._mask = AR_SERDES_SBUS_07_RESERVED_3_0_MASK,
      ._rval = AR_SERDES_SBUS_07_RSTDATA & AR_SERDES_SBUS_07_RESERVED_3_0_MASK,
      ._index = AR_SERDES_SBUS_07_RESERVED_3_0_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_0b_detail[] = {
    { ._name = "RESERVED_31_3",
      ._bpos = AR_SERDES_SBUS_0B_RESERVED_31_3_BP,
      ._mask = AR_SERDES_SBUS_0B_RESERVED_31_3_MASK,
      ._rval = AR_SERDES_SBUS_0B_RSTDATA & AR_SERDES_SBUS_0B_RESERVED_31_3_MASK,
      ._index = AR_SERDES_SBUS_0B_RESERVED_31_3_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "TX_REFCLK_SYNC_CTRL",
      ._bpos = AR_SERDES_SBUS_0B_TX_REFCLK_SYNC_CTRL_BP,
      ._mask = AR_SERDES_SBUS_0B_TX_REFCLK_SYNC_CTRL_MASK,
      ._rval = AR_SERDES_SBUS_0B_RSTDATA & AR_SERDES_SBUS_0B_TX_REFCLK_SYNC_CTRL_MASK,
      ._index = AR_SERDES_SBUS_0B_TX_REFCLK_SYNC_CTRL_QW,
      ._desc = "Override for i_tx_refclk_sync_master",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_REFCLK_SYNC_GATE",
      ._bpos = AR_SERDES_SBUS_0B_TX_REFCLK_SYNC_GATE_BP,
      ._mask = AR_SERDES_SBUS_0B_TX_REFCLK_SYNC_GATE_MASK,
      ._rval = AR_SERDES_SBUS_0B_RSTDATA & AR_SERDES_SBUS_0B_TX_REFCLK_SYNC_GATE_MASK,
      ._index = AR_SERDES_SBUS_0B_TX_REFCLK_SYNC_GATE_QW,
      ._desc = "Gate for overriding i_tx_refclk_sync_master",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RESERVED_0",
      ._bpos = AR_SERDES_SBUS_0B_RESERVED_0_BP,
      ._mask = AR_SERDES_SBUS_0B_RESERVED_0_MASK,
      ._rval = AR_SERDES_SBUS_0B_RSTDATA & AR_SERDES_SBUS_0B_RESERVED_0_MASK,
      ._index = AR_SERDES_SBUS_0B_RESERVED_0_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_3c_detail[] = {
    { ._name = "RESERVED_31_13",
      ._bpos = AR_SERDES_SBUS_3C_RESERVED_31_13_BP,
      ._mask = AR_SERDES_SBUS_3C_RESERVED_31_13_MASK,
      ._rval = AR_SERDES_SBUS_3C_RSTDATA & AR_SERDES_SBUS_3C_RESERVED_31_13_MASK,
      ._index = AR_SERDES_SBUS_3C_RESERVED_31_13_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "TX_OUTPUT_EQ_POST_CNTL",
      ._bpos = AR_SERDES_SBUS_3C_TX_OUTPUT_EQ_POST_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3C_TX_OUTPUT_EQ_POST_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3C_RSTDATA & AR_SERDES_SBUS_3C_TX_OUTPUT_EQ_POST_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3C_TX_OUTPUT_EQ_POST_CNTL_QW,
      ._desc = "Overrides i_tx_output_eq_post port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_OUTPUT_EQ_PRE_CNTL",
      ._bpos = AR_SERDES_SBUS_3C_TX_OUTPUT_EQ_PRE_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3C_TX_OUTPUT_EQ_PRE_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3C_RSTDATA & AR_SERDES_SBUS_3C_TX_OUTPUT_EQ_PRE_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3C_TX_OUTPUT_EQ_PRE_CNTL_QW,
      ._desc = "Overrides i_tx_output_eq_pre port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_OUTPUT_EQ_GATE",
      ._bpos = AR_SERDES_SBUS_3C_TX_OUTPUT_EQ_GATE_BP,
      ._mask = AR_SERDES_SBUS_3C_TX_OUTPUT_EQ_GATE_MASK,
      ._rval = AR_SERDES_SBUS_3C_RSTDATA & AR_SERDES_SBUS_3C_TX_OUTPUT_EQ_GATE_MASK,
      ._index = AR_SERDES_SBUS_3C_TX_OUTPUT_EQ_GATE_QW,
      ._desc = "Gate to override the i_tx_output_eq_pre and i_tx_output_eq_post ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_3d_detail[] = {
    { ._name = "RESERVED_31_15",
      ._bpos = AR_SERDES_SBUS_3D_RESERVED_31_15_BP,
      ._mask = AR_SERDES_SBUS_3D_RESERVED_31_15_MASK,
      ._rval = AR_SERDES_SBUS_3D_RSTDATA & AR_SERDES_SBUS_3D_RESERVED_31_15_MASK,
      ._index = AR_SERDES_SBUS_3D_RESERVED_31_15_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "TX_IMPEDANCE_GATE",
      ._bpos = AR_SERDES_SBUS_3D_TX_IMPEDANCE_GATE_BP,
      ._mask = AR_SERDES_SBUS_3D_TX_IMPEDANCE_GATE_MASK,
      ._rval = AR_SERDES_SBUS_3D_RSTDATA & AR_SERDES_SBUS_3D_TX_IMPEDANCE_GATE_MASK,
      ._index = AR_SERDES_SBUS_3D_TX_IMPEDANCE_GATE_QW,
      ._desc = "Gate to override Tx impedance controls",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_IMPEDANCE_CNTL",
      ._bpos = AR_SERDES_SBUS_3D_TX_IMPEDANCE_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3D_TX_IMPEDANCE_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3D_RSTDATA & AR_SERDES_SBUS_3D_TX_IMPEDANCE_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3D_TX_IMPEDANCE_CNTL_QW,
      ._desc = "Controls the impedance setting",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_OUTPUT_ATTENUATION_CNTL",
      ._bpos = AR_SERDES_SBUS_3D_TX_OUTPUT_ATTENUATION_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3D_TX_OUTPUT_ATTENUATION_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3D_RSTDATA & AR_SERDES_SBUS_3D_TX_OUTPUT_ATTENUATION_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3D_TX_OUTPUT_ATTENUATION_CNTL_QW,
      ._desc = "Overrides i_tx_output_attenuation port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_LND_DISABLE_CNTL",
      ._bpos = AR_SERDES_SBUS_3D_TX_LND_DISABLE_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3D_TX_LND_DISABLE_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3D_RSTDATA & AR_SERDES_SBUS_3D_TX_LND_DISABLE_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3D_TX_LND_DISABLE_CNTL_QW,
      ._desc = "When set, the low noise driver is disabled",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_OUTPUT_SLEW_CNTL",
      ._bpos = AR_SERDES_SBUS_3D_TX_OUTPUT_SLEW_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3D_TX_OUTPUT_SLEW_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3D_RSTDATA & AR_SERDES_SBUS_3D_TX_OUTPUT_SLEW_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3D_TX_OUTPUT_SLEW_CNTL_QW,
      ._desc = "Overrides i_tx_output_slew port Observes the gated value",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_ATTENUATION_GATE",
      ._bpos = AR_SERDES_SBUS_3D_TX_ATTENUATION_GATE_BP,
      ._mask = AR_SERDES_SBUS_3D_TX_ATTENUATION_GATE_MASK,
      ._rval = AR_SERDES_SBUS_3D_RSTDATA & AR_SERDES_SBUS_3D_TX_ATTENUATION_GATE_MASK,
      ._index = AR_SERDES_SBUS_3D_TX_ATTENUATION_GATE_QW,
      ._desc = "Gate to override Tx output controls",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_3e_detail[] = {
    { ._name = "RESERVED_31_3",
      ._bpos = AR_SERDES_SBUS_3E_RESERVED_31_3_BP,
      ._mask = AR_SERDES_SBUS_3E_RESERVED_31_3_MASK,
      ._rval = AR_SERDES_SBUS_3E_RSTDATA & AR_SERDES_SBUS_3E_RESERVED_31_3_MASK,
      ._index = AR_SERDES_SBUS_3E_RESERVED_31_3_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "NEAR_LOOPBACK_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_3E_NEAR_LOOPBACK_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3E_NEAR_LOOPBACK_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3E_RSTDATA & AR_SERDES_SBUS_3E_NEAR_LOOPBACK_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3E_NEAR_LOOPBACK_EN_CNTL_QW,
      ._desc = "Overrides the i_near_loopback_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_OUTPUT_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_3E_TX_OUTPUT_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3E_TX_OUTPUT_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3E_RSTDATA & AR_SERDES_SBUS_3E_TX_OUTPUT_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3E_TX_OUTPUT_EN_CNTL_QW,
      ._desc = "Overrides the i_tx_output_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_OUTPUT_GATE",
      ._bpos = AR_SERDES_SBUS_3E_TX_OUTPUT_GATE_BP,
      ._mask = AR_SERDES_SBUS_3E_TX_OUTPUT_GATE_MASK,
      ._rval = AR_SERDES_SBUS_3E_RSTDATA & AR_SERDES_SBUS_3E_TX_OUTPUT_GATE_MASK,
      ._index = AR_SERDES_SBUS_3E_TX_OUTPUT_GATE_QW,
      ._desc = "Gate for various Tx driver control ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_3f_detail[] = {
    { ._name = "RESERVED_31_13",
      ._bpos = AR_SERDES_SBUS_3F_RESERVED_31_13_BP,
      ._mask = AR_SERDES_SBUS_3F_RESERVED_31_13_MASK,
      ._rval = AR_SERDES_SBUS_3F_RSTDATA & AR_SERDES_SBUS_3F_RESERVED_31_13_MASK,
      ._index = AR_SERDES_SBUS_3F_RESERVED_31_13_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "TX_ALT_PATTERN_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_3F_TX_ALT_PATTERN_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3F_TX_ALT_PATTERN_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3F_RSTDATA & AR_SERDES_SBUS_3F_TX_ALT_PATTERN_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3F_TX_ALT_PATTERN_EN_CNTL_QW,
      ._desc = "When asserted, enables transmitter 40/80-bit alternating user pattern mode",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_ELEC_IDLE_CNTL",
      ._bpos = AR_SERDES_SBUS_3F_TX_ELEC_IDLE_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3F_TX_ELEC_IDLE_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3F_RSTDATA & AR_SERDES_SBUS_3F_TX_ELEC_IDLE_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3F_TX_ELEC_IDLE_CNTL_QW,
      ._desc = "Overrides i_pcie_tx_elec_idle port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_POLARITY_INV_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_3F_TX_POLARITY_INV_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3F_TX_POLARITY_INV_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3F_RSTDATA & AR_SERDES_SBUS_3F_TX_POLARITY_INV_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3F_TX_POLARITY_INV_EN_CNTL_QW,
      ._desc = "Overrides i_tx_polarity_inv_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_INVERT_ONE_WORD_CNTL",
      ._bpos = AR_SERDES_SBUS_3F_TX_INVERT_ONE_WORD_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3F_TX_INVERT_ONE_WORD_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3F_RSTDATA & AR_SERDES_SBUS_3F_TX_INVERT_ONE_WORD_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3F_TX_INVERT_ONE_WORD_CNTL_QW,
      ._desc = "On a '0'-to-'1' transition, inverts one word out of the transmitter",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_SEL_CORE_DATA_CNTL",
      ._bpos = AR_SERDES_SBUS_3F_TX_SEL_CORE_DATA_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3F_TX_SEL_CORE_DATA_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3F_RSTDATA & AR_SERDES_SBUS_3F_TX_SEL_CORE_DATA_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3F_TX_SEL_CORE_DATA_CNTL_QW,
      ._desc = "Set to '1' to force the Tx to send core data rather than data from the pattern generator when SBUS mode is enabled",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_PATTERN_GEN_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_3F_TX_PATTERN_GEN_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3F_TX_PATTERN_GEN_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3F_RSTDATA & AR_SERDES_SBUS_3F_TX_PATTERN_GEN_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3F_TX_PATTERN_GEN_EN_CNTL_QW,
      ._desc = "Overrides the i_tx_pattern_gen_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_PATTERN_GEN_SEL_CNTL",
      ._bpos = AR_SERDES_SBUS_3F_TX_PATTERN_GEN_SEL_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3F_TX_PATTERN_GEN_SEL_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3F_RSTDATA & AR_SERDES_SBUS_3F_TX_PATTERN_GEN_SEL_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3F_TX_PATTERN_GEN_SEL_CNTL_QW,
      ._desc = "Overrides the i_tx_pattern_gen_sel port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_PATTERN_GEN_CTL_CNTL",
      ._bpos = AR_SERDES_SBUS_3F_TX_PATTERN_GEN_CTL_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3F_TX_PATTERN_GEN_CTL_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3F_RSTDATA & AR_SERDES_SBUS_3F_TX_PATTERN_GEN_CTL_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3F_TX_PATTERN_GEN_CTL_CNTL_QW,
      ._desc = "Used to load/run 40/80-bit user patterns",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_DATA_SEL_CNTL",
      ._bpos = AR_SERDES_SBUS_3F_TX_DATA_SEL_CNTL_BP,
      ._mask = AR_SERDES_SBUS_3F_TX_DATA_SEL_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_3F_RSTDATA & AR_SERDES_SBUS_3F_TX_DATA_SEL_CNTL_MASK,
      ._index = AR_SERDES_SBUS_3F_TX_DATA_SEL_CNTL_QW,
      ._desc = "Selects which data to transmit: 00 - PRBS data 01 - inverse PRBS data 10 - user register data 11 - alternating inverse user register data",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "TX_DATA_GATE",
      ._bpos = AR_SERDES_SBUS_3F_TX_DATA_GATE_BP,
      ._mask = AR_SERDES_SBUS_3F_TX_DATA_GATE_MASK,
      ._rval = AR_SERDES_SBUS_3F_RSTDATA & AR_SERDES_SBUS_3F_TX_DATA_GATE_MASK,
      ._index = AR_SERDES_SBUS_3F_TX_DATA_GATE_QW,
      ._desc = "Gate to override Tx controls",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_40_detail[] = {
    { ._name = "RESERVED_31_20",
      ._bpos = AR_SERDES_SBUS_40_RESERVED_31_20_BP,
      ._mask = AR_SERDES_SBUS_40_RESERVED_31_20_MASK,
      ._rval = AR_SERDES_SBUS_40_RSTDATA & AR_SERDES_SBUS_40_RESERVED_31_20_MASK,
      ._index = AR_SERDES_SBUS_40_RESERVED_31_20_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "TX_USER_REG_CNTL",
      ._bpos = AR_SERDES_SBUS_40_TX_USER_REG_CNTL_BP,
      ._mask = AR_SERDES_SBUS_40_TX_USER_REG_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_40_RSTDATA & AR_SERDES_SBUS_40_TX_USER_REG_CNTL_MASK,
      ._index = AR_SERDES_SBUS_40_TX_USER_REG_CNTL_QW,
      ._desc = "In 10-bit mode, the lower 10 bits are loaded into the pattern generator",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_41_detail[] = {
    { ._name = "RESERVED_31_1",
      ._bpos = AR_SERDES_SBUS_41_RESERVED_31_1_BP,
      ._mask = AR_SERDES_SBUS_41_RESERVED_31_1_MASK,
      ._rval = AR_SERDES_SBUS_41_RSTDATA & AR_SERDES_SBUS_41_RESERVED_31_1_MASK,
      ._index = AR_SERDES_SBUS_41_RESERVED_31_1_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_K30_7_ERR_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_41_RX_K30_7_ERR_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_41_RX_K30_7_ERR_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_41_RSTDATA & AR_SERDES_SBUS_41_RX_K30_7_ERR_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_41_RX_K30_7_ERR_EN_CNTL_QW,
      ._desc = "Overrides i_k30_7_err_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_50_detail[] = {
    { ._name = "RESERVED_31_21",
      ._bpos = AR_SERDES_SBUS_50_RESERVED_31_21_BP,
      ._mask = AR_SERDES_SBUS_50_RESERVED_31_21_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RESERVED_31_21_MASK,
      ._index = AR_SERDES_SBUS_50_RESERVED_31_21_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_OFFSET_DATA_SEL_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_OFFSET_DATA_SEL_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_OFFSET_DATA_SEL_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_OFFSET_DATA_SEL_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_OFFSET_DATA_SEL_CNTL_QW,
      ._desc = "Selects between regular and offset data",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RESERVED_19_18",
      ._bpos = AR_SERDES_SBUS_50_RESERVED_19_18_BP,
      ._mask = AR_SERDES_SBUS_50_RESERVED_19_18_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RESERVED_19_18_MASK,
      ._index = AR_SERDES_SBUS_50_RESERVED_19_18_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "SIG_STRENGTH_STRONG_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_50_SIG_STRENGTH_STRONG_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_SIG_STRENGTH_STRONG_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_SIG_STRENGTH_STRONG_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_SIG_STRENGTH_STRONG_EN_CNTL_QW,
      ._desc = "Overrides i_rx_sig_strength_strong_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_SIG_STRENGTH_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_SIG_STRENGTH_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_SIG_STRENGTH_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_SIG_STRENGTH_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_SIG_STRENGTH_EN_CNTL_QW,
      ._desc = "Overrides the i_rx_sig_strength_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_DROPOUT_CHAR_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_DROPOUT_CHAR_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_DROPOUT_CHAR_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_DROPOUT_CHAR_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_DROPOUT_CHAR_EN_CNTL_QW,
      ._desc = "Overrides the i_rx_dropout_char_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_INVERT_ONE_WORD_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_INVERT_ONE_WORD_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_INVERT_ONE_WORD_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_INVERT_ONE_WORD_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_INVERT_ONE_WORD_CNTL_QW,
      ._desc = "A rising edge on this signal will force an inversion of a single Rx data word",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_PATTERN_CMP_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_PATTERN_CMP_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_PATTERN_CMP_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_PATTERN_CMP_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_PATTERN_CMP_EN_CNTL_QW,
      ._desc = "Overrides the i_rx_pattern_cmp_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_PATTERN_CMP_SEL_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_PATTERN_CMP_SEL_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_PATTERN_CMP_SEL_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_PATTERN_CMP_SEL_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_PATTERN_CMP_SEL_CNTL_QW,
      ._desc = "Overrides the i_rx_pattern_cmp_sel port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_PATTERN_CTL_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_PATTERN_CTL_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_PATTERN_CTL_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_PATTERN_CTL_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_PATTERN_CTL_CNTL_QW,
      ._desc = "Bit 0 selects Load-til-Error mode",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_SEL_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_SEL_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_SEL_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_SEL_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_SEL_CNTL_QW,
      ._desc = "Selects comparator data: 00-PRBS data, 01-inverse PRBS data 10-user register data 11-alternating inverse user reg",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_K28_7_COMMA_DET_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_K28_7_COMMA_DET_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_K28_7_COMMA_DET_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_K28_7_COMMA_DET_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_K28_7_COMMA_DET_EN_CNTL_QW,
      ._desc = "Overrides i_rx_k28_7_comma_det_en port, which is used to enable/disable the use of the K28",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_DATA_HALT_LOAD_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_DATA_HALT_LOAD_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_DATA_HALT_LOAD_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_DATA_HALT_LOAD_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_DATA_HALT_LOAD_CNTL_QW,
      ._desc = "Used to halt loading of the comparators",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_POLARITY_INV_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_POLARITY_INV_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_POLARITY_INV_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_POLARITY_INV_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_POLARITY_INV_EN_CNTL_QW,
      ._desc = "Overrides the i_rx_polarity_inv_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_BIT_SLIP_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_BIT_SLIP_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_BIT_SLIP_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_BIT_SLIP_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_BIT_SLIP_CNTL_QW,
      ._desc = "Overrides the i_rx_bit_slip port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_8B10B_ALIGN_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_50_RX_8B10B_ALIGN_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_50_RX_8B10B_ALIGN_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_8B10B_ALIGN_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_50_RX_8B10B_ALIGN_EN_CNTL_QW,
      ._desc = "Overrides the i_rx_8b10b_align_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_DATA_GATE",
      ._bpos = AR_SERDES_SBUS_50_RX_DATA_GATE_BP,
      ._mask = AR_SERDES_SBUS_50_RX_DATA_GATE_MASK,
      ._rval = AR_SERDES_SBUS_50_RSTDATA & AR_SERDES_SBUS_50_RX_DATA_GATE_MASK,
      ._index = AR_SERDES_SBUS_50_RX_DATA_GATE_QW,
      ._desc = "Gate to override Rx controls",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_51_detail[] = {
    { ._name = "RESERVED_31_3",
      ._bpos = AR_SERDES_SBUS_51_RESERVED_31_3_BP,
      ._mask = AR_SERDES_SBUS_51_RESERVED_31_3_MASK,
      ._rval = AR_SERDES_SBUS_51_RSTDATA & AR_SERDES_SBUS_51_RESERVED_31_3_MASK,
      ._index = AR_SERDES_SBUS_51_RESERVED_31_3_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_ALT_PATTERN_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_51_RX_ALT_PATTERN_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_51_RX_ALT_PATTERN_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_51_RSTDATA & AR_SERDES_SBUS_51_RX_ALT_PATTERN_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_51_RX_ALT_PATTERN_EN_CNTL_QW,
      ._desc = "When asserted, enables receiver 40/80-bit alternating user pattern mode",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RESERVED_1_0",
      ._bpos = AR_SERDES_SBUS_51_RESERVED_1_0_BP,
      ._mask = AR_SERDES_SBUS_51_RESERVED_1_0_MASK,
      ._rval = AR_SERDES_SBUS_51_RSTDATA & AR_SERDES_SBUS_51_RESERVED_1_0_MASK,
      ._index = AR_SERDES_SBUS_51_RESERVED_1_0_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_52_detail[] = {
    { ._name = "RESERVED_31_20",
      ._bpos = AR_SERDES_SBUS_52_RESERVED_31_20_BP,
      ._mask = AR_SERDES_SBUS_52_RESERVED_31_20_MASK,
      ._rval = AR_SERDES_SBUS_52_RSTDATA & AR_SERDES_SBUS_52_RESERVED_31_20_MASK,
      ._index = AR_SERDES_SBUS_52_RESERVED_31_20_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_USER_REG_CNTL",
      ._bpos = AR_SERDES_SBUS_52_RX_USER_REG_CNTL_BP,
      ._mask = AR_SERDES_SBUS_52_RX_USER_REG_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_52_RSTDATA & AR_SERDES_SBUS_52_RX_USER_REG_CNTL_MASK,
      ._index = AR_SERDES_SBUS_52_RX_USER_REG_CNTL_QW,
      ._desc = "Used for loading the comparator during four load sequences",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_53_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_53_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_53_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_53_RSTDATA & AR_SERDES_SBUS_53_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_53_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_ERROR_MONITOR_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_53_RX_ERROR_MONITOR_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_53_RX_ERROR_MONITOR_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_53_RSTDATA & AR_SERDES_SBUS_53_RX_ERROR_MONITOR_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_53_RX_ERROR_MONITOR_EN_CNTL_QW,
      ._desc = "Logic '1' enables the error counter and allows the sticky error monitoring registers to update",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_ERROR_MONITOR_RESET_CNTL",
      ._bpos = AR_SERDES_SBUS_53_RX_ERROR_MONITOR_RESET_CNTL_BP,
      ._mask = AR_SERDES_SBUS_53_RX_ERROR_MONITOR_RESET_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_53_RSTDATA & AR_SERDES_SBUS_53_RX_ERROR_MONITOR_RESET_CNTL_MASK,
      ._index = AR_SERDES_SBUS_53_RX_ERROR_MONITOR_RESET_CNTL_QW,
      ._desc = "Logic '1' resets the error counter and the sticky error monitoring registers",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_ERROR_EDGE_DETECT_CNTL",
      ._bpos = AR_SERDES_SBUS_53_RX_ERROR_EDGE_DETECT_CNTL_BP,
      ._mask = AR_SERDES_SBUS_53_RX_ERROR_EDGE_DETECT_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_53_RSTDATA & AR_SERDES_SBUS_53_RX_ERROR_EDGE_DETECT_CNTL_MASK,
      ._index = AR_SERDES_SBUS_53_RX_ERROR_EDGE_DETECT_CNTL_QW,
      ._desc = "When set to '1', only positive edges detected on the selected data (RX_ERROR_MONITOR_SEL_CNTL) will increment the error counter",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_ERROR_MONITOR_SEL_CNTL",
      ._bpos = AR_SERDES_SBUS_53_RX_ERROR_MONITOR_SEL_CNTL_BP,
      ._mask = AR_SERDES_SBUS_53_RX_ERROR_MONITOR_SEL_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_53_RSTDATA & AR_SERDES_SBUS_53_RX_ERROR_MONITOR_SEL_CNTL_MASK,
      ._index = AR_SERDES_SBUS_53_RX_ERROR_MONITOR_SEL_CNTL_QW,
      ._desc = "Selects which data is monitored by the error counter: 0000 thru 0010 - NA 0011 - rx_pattern_cmp_fail 0100 - rx_8b10b_slip_in_progress 0101 - rx_8b10b_comma_det 0110 - rx_bit_slip_edge 0111 - rx_sig_strength[0] 1000 - rx_sig_strength[1] 1001 - rx_data_offset_error 1010 - cal_in_progress 1011 - fine_frequency_lock 1100 - rx_elec_idle_detect 1101 thru 1111 - NA",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_ERROR_MONITOR_GATE",
      ._bpos = AR_SERDES_SBUS_53_RX_ERROR_MONITOR_GATE_BP,
      ._mask = AR_SERDES_SBUS_53_RX_ERROR_MONITOR_GATE_MASK,
      ._rval = AR_SERDES_SBUS_53_RSTDATA & AR_SERDES_SBUS_53_RX_ERROR_MONITOR_GATE_MASK,
      ._index = AR_SERDES_SBUS_53_RX_ERROR_MONITOR_GATE_QW,
      ._desc = "Gate for Rx error monitoring circuitry",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_54_detail[] = {
    { ._name = "RESERVED_31_9",
      ._bpos = AR_SERDES_SBUS_54_RESERVED_31_9_BP,
      ._mask = AR_SERDES_SBUS_54_RESERVED_31_9_MASK,
      ._rval = AR_SERDES_SBUS_54_RSTDATA & AR_SERDES_SBUS_54_RESERVED_31_9_MASK,
      ._index = AR_SERDES_SBUS_54_RESERVED_31_9_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_8B10B_ALIGNED_COMMA_DET_MSB",
      ._bpos = AR_SERDES_SBUS_54_RX_8B10B_ALIGNED_COMMA_DET_MSB_BP,
      ._mask = AR_SERDES_SBUS_54_RX_8B10B_ALIGNED_COMMA_DET_MSB_MASK,
      ._rval = AR_SERDES_SBUS_54_RSTDATA & AR_SERDES_SBUS_54_RX_8B10B_ALIGNED_COMMA_DET_MSB_MASK,
      ._index = AR_SERDES_SBUS_54_RX_8B10B_ALIGNED_COMMA_DET_MSB_QW,
      ._desc = "Observes o_rx_8b10b_aligned_comma_det MSB",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_8B10B_ALIGNED_COMMA_DET_LSB",
      ._bpos = AR_SERDES_SBUS_54_RX_8B10B_ALIGNED_COMMA_DET_LSB_BP,
      ._mask = AR_SERDES_SBUS_54_RX_8B10B_ALIGNED_COMMA_DET_LSB_MASK,
      ._rval = AR_SERDES_SBUS_54_RSTDATA & AR_SERDES_SBUS_54_RX_8B10B_ALIGNED_COMMA_DET_LSB_MASK,
      ._index = AR_SERDES_SBUS_54_RX_8B10B_ALIGNED_COMMA_DET_LSB_QW,
      ._desc = "Observes o_rx_8b10b_aligned_comma_det LSB",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_PATTERN_CMP_PASS",
      ._bpos = AR_SERDES_SBUS_54_RX_PATTERN_CMP_PASS_BP,
      ._mask = AR_SERDES_SBUS_54_RX_PATTERN_CMP_PASS_MASK,
      ._rval = AR_SERDES_SBUS_54_RSTDATA & AR_SERDES_SBUS_54_RX_PATTERN_CMP_PASS_MASK,
      ._index = AR_SERDES_SBUS_54_RX_PATTERN_CMP_PASS_QW,
      ._desc = "Observes o_rx_pattern_cmp_pass port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_8B10B_COMMA_DET_MSB",
      ._bpos = AR_SERDES_SBUS_54_RX_8B10B_COMMA_DET_MSB_BP,
      ._mask = AR_SERDES_SBUS_54_RX_8B10B_COMMA_DET_MSB_MASK,
      ._rval = AR_SERDES_SBUS_54_RSTDATA & AR_SERDES_SBUS_54_RX_8B10B_COMMA_DET_MSB_MASK,
      ._index = AR_SERDES_SBUS_54_RX_8B10B_COMMA_DET_MSB_QW,
      ._desc = "Observes o_rx_8b10b_comma_det MSB",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_8B10B_COMMA_DET_LSB",
      ._bpos = AR_SERDES_SBUS_54_RX_8B10B_COMMA_DET_LSB_BP,
      ._mask = AR_SERDES_SBUS_54_RX_8B10B_COMMA_DET_LSB_MASK,
      ._rval = AR_SERDES_SBUS_54_RSTDATA & AR_SERDES_SBUS_54_RX_8B10B_COMMA_DET_LSB_MASK,
      ._index = AR_SERDES_SBUS_54_RX_8B10B_COMMA_DET_LSB_QW,
      ._desc = "Observes o_rx_8b10b_comma_det LSB",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_8B10B_SLIP_IN_PROGRESS_DET",
      ._bpos = AR_SERDES_SBUS_54_RX_8B10B_SLIP_IN_PROGRESS_DET_BP,
      ._mask = AR_SERDES_SBUS_54_RX_8B10B_SLIP_IN_PROGRESS_DET_MASK,
      ._rval = AR_SERDES_SBUS_54_RSTDATA & AR_SERDES_SBUS_54_RX_8B10B_SLIP_IN_PROGRESS_DET_MASK,
      ._index = AR_SERDES_SBUS_54_RX_8B10B_SLIP_IN_PROGRESS_DET_QW,
      ._desc = "Observes o_rx_8b10b_slip_in_progress port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RESERVED_2",
      ._bpos = AR_SERDES_SBUS_54_RESERVED_2_BP,
      ._mask = AR_SERDES_SBUS_54_RESERVED_2_MASK,
      ._rval = AR_SERDES_SBUS_54_RSTDATA & AR_SERDES_SBUS_54_RESERVED_2_MASK,
      ._index = AR_SERDES_SBUS_54_RESERVED_2_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_PRBS_FAILURE",
      ._bpos = AR_SERDES_SBUS_54_RX_PRBS_FAILURE_BP,
      ._mask = AR_SERDES_SBUS_54_RX_PRBS_FAILURE_MASK,
      ._rval = AR_SERDES_SBUS_54_RSTDATA & AR_SERDES_SBUS_54_RX_PRBS_FAILURE_MASK,
      ._index = AR_SERDES_SBUS_54_RX_PRBS_FAILURE_QW,
      ._desc = "Monitors pattern comparison failures between the expected data values and the received data values",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_ERROR_OCCURED",
      ._bpos = AR_SERDES_SBUS_54_RX_ERROR_OCCURED_BP,
      ._mask = AR_SERDES_SBUS_54_RX_ERROR_OCCURED_MASK,
      ._rval = AR_SERDES_SBUS_54_RSTDATA & AR_SERDES_SBUS_54_RX_ERROR_OCCURED_MASK,
      ._index = AR_SERDES_SBUS_54_RX_ERROR_OCCURED_QW,
      ._desc = "Set as soon as the error counter is incremented away from '0'",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_55_detail[] = {
    { ._name = "RX_ERROR_COUNT_OBS",
      ._bpos = AR_SERDES_SBUS_55_RX_ERROR_COUNT_OBS_BP,
      ._mask = AR_SERDES_SBUS_55_RX_ERROR_COUNT_OBS_MASK,
      ._rval = AR_SERDES_SBUS_55_RSTDATA & AR_SERDES_SBUS_55_RX_ERROR_COUNT_OBS_MASK,
      ._index = AR_SERDES_SBUS_55_RX_ERROR_COUNT_OBS_QW,
      ._desc = "Monitors error_count_value[31:0]",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_56_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_56_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_56_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_56_RSTDATA & AR_SERDES_SBUS_56_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_56_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_PRBS_DATA_MSB_OBS_39_32",
      ._bpos = AR_SERDES_SBUS_56_RX_PRBS_DATA_MSB_OBS_39_32_BP,
      ._mask = AR_SERDES_SBUS_56_RX_PRBS_DATA_MSB_OBS_39_32_MASK,
      ._rval = AR_SERDES_SBUS_56_RSTDATA & AR_SERDES_SBUS_56_RX_PRBS_DATA_MSB_OBS_39_32_MASK,
      ._index = AR_SERDES_SBUS_56_RX_PRBS_DATA_MSB_OBS_39_32_QW,
      ._desc = "Monitors the user/PRBS MSB data registers[39:32]",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_57_detail[] = {
    { ._name = "RX_PRBS_DATA_MSB_OBS_31_0",
      ._bpos = AR_SERDES_SBUS_57_RX_PRBS_DATA_MSB_OBS_31_0_BP,
      ._mask = AR_SERDES_SBUS_57_RX_PRBS_DATA_MSB_OBS_31_0_MASK,
      ._rval = AR_SERDES_SBUS_57_RSTDATA & AR_SERDES_SBUS_57_RX_PRBS_DATA_MSB_OBS_31_0_MASK,
      ._index = AR_SERDES_SBUS_57_RX_PRBS_DATA_MSB_OBS_31_0_QW,
      ._desc = "Monitors the user/PRBS MSB data registers[31:0]",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_58_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_58_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_58_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_58_RSTDATA & AR_SERDES_SBUS_58_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_58_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_PRBS_DATA_LSB_OBS_39_32",
      ._bpos = AR_SERDES_SBUS_58_RX_PRBS_DATA_LSB_OBS_39_32_BP,
      ._mask = AR_SERDES_SBUS_58_RX_PRBS_DATA_LSB_OBS_39_32_MASK,
      ._rval = AR_SERDES_SBUS_58_RSTDATA & AR_SERDES_SBUS_58_RX_PRBS_DATA_LSB_OBS_39_32_MASK,
      ._index = AR_SERDES_SBUS_58_RX_PRBS_DATA_LSB_OBS_39_32_QW,
      ._desc = "Monitors the user/PRBS LSB data registers[39:32]",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_59_detail[] = {
    { ._name = "RX_PRBS_DATA_LSB_OBS_31_0",
      ._bpos = AR_SERDES_SBUS_59_RX_PRBS_DATA_LSB_OBS_31_0_BP,
      ._mask = AR_SERDES_SBUS_59_RX_PRBS_DATA_LSB_OBS_31_0_MASK,
      ._rval = AR_SERDES_SBUS_59_RSTDATA & AR_SERDES_SBUS_59_RX_PRBS_DATA_LSB_OBS_31_0_MASK,
      ._index = AR_SERDES_SBUS_59_RX_PRBS_DATA_LSB_OBS_31_0_QW,
      ._desc = "Monitors the user/PRBS LSB data registers[31:0]",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_5a_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_5A_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_5A_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_5A_RSTDATA & AR_SERDES_SBUS_5A_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_5A_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_SIG_STRENGTH_OBS",
      ._bpos = AR_SERDES_SBUS_5A_RX_SIG_STRENGTH_OBS_BP,
      ._mask = AR_SERDES_SBUS_5A_RX_SIG_STRENGTH_OBS_MASK,
      ._rval = AR_SERDES_SBUS_5A_RSTDATA & AR_SERDES_SBUS_5A_RX_SIG_STRENGTH_OBS_MASK,
      ._index = AR_SERDES_SBUS_5A_RX_SIG_STRENGTH_OBS_QW,
      ._desc = "Observes o_rx_sig_strength ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RESERVED_5_0",
      ._bpos = AR_SERDES_SBUS_5A_RESERVED_5_0_BP,
      ._mask = AR_SERDES_SBUS_5A_RESERVED_5_0_MASK,
      ._rval = AR_SERDES_SBUS_5A_RSTDATA & AR_SERDES_SBUS_5A_RESERVED_5_0_MASK,
      ._index = AR_SERDES_SBUS_5A_RESERVED_5_0_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_5b_detail[] = {
    { ._name = "RESERVED_31_2",
      ._bpos = AR_SERDES_SBUS_5B_RESERVED_31_2_BP,
      ._mask = AR_SERDES_SBUS_5B_RESERVED_31_2_MASK,
      ._rval = AR_SERDES_SBUS_5B_RSTDATA & AR_SERDES_SBUS_5B_RESERVED_31_2_MASK,
      ._index = AR_SERDES_SBUS_5B_RESERVED_31_2_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_FAR_LOOPBACK_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_5B_RX_FAR_LOOPBACK_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_5B_RX_FAR_LOOPBACK_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_5B_RSTDATA & AR_SERDES_SBUS_5B_RX_FAR_LOOPBACK_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_5B_RX_FAR_LOOPBACK_EN_CNTL_QW,
      ._desc = "Overrides i_far_loopback_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_FAR_LOOPBACK_GATE",
      ._bpos = AR_SERDES_SBUS_5B_RX_FAR_LOOPBACK_GATE_BP,
      ._mask = AR_SERDES_SBUS_5B_RX_FAR_LOOPBACK_GATE_MASK,
      ._rval = AR_SERDES_SBUS_5B_RSTDATA & AR_SERDES_SBUS_5B_RX_FAR_LOOPBACK_GATE_MASK,
      ._index = AR_SERDES_SBUS_5B_RX_FAR_LOOPBACK_GATE_QW,
      ._desc = "Gate for far loopback related signals",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_64_detail[] = {
    { ._name = "RESERVED_31_9",
      ._bpos = AR_SERDES_SBUS_64_RESERVED_31_9_BP,
      ._mask = AR_SERDES_SBUS_64_RESERVED_31_9_MASK,
      ._rval = AR_SERDES_SBUS_64_RSTDATA & AR_SERDES_SBUS_64_RESERVED_31_9_MASK,
      ._index = AR_SERDES_SBUS_64_RESERVED_31_9_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_DFE_B_DATA_PD_CNTL",
      ._bpos = AR_SERDES_SBUS_64_RX_DFE_B_DATA_PD_CNTL_BP,
      ._mask = AR_SERDES_SBUS_64_RX_DFE_B_DATA_PD_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_64_RSTDATA & AR_SERDES_SBUS_64_RX_DFE_B_DATA_PD_CNTL_MASK,
      ._index = AR_SERDES_SBUS_64_RX_DFE_B_DATA_PD_CNTL_QW,
      ._desc = "Set to '1' to power down DFE B data",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_DFE_B_OFFSET_PD_CNTL",
      ._bpos = AR_SERDES_SBUS_64_RX_DFE_B_OFFSET_PD_CNTL_BP,
      ._mask = AR_SERDES_SBUS_64_RX_DFE_B_OFFSET_PD_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_64_RSTDATA & AR_SERDES_SBUS_64_RX_DFE_B_OFFSET_PD_CNTL_MASK,
      ._index = AR_SERDES_SBUS_64_RX_DFE_B_OFFSET_PD_CNTL_QW,
      ._desc = "Set to '1' to power down DFE B offset",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_DFE_A_DATA_PD_CNTL",
      ._bpos = AR_SERDES_SBUS_64_RX_DFE_A_DATA_PD_CNTL_BP,
      ._mask = AR_SERDES_SBUS_64_RX_DFE_A_DATA_PD_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_64_RSTDATA & AR_SERDES_SBUS_64_RX_DFE_A_DATA_PD_CNTL_MASK,
      ._index = AR_SERDES_SBUS_64_RX_DFE_A_DATA_PD_CNTL_QW,
      ._desc = "Set to '1' to power down DFE A data",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_DFE_A_OFFSET_PD_CNTL",
      ._bpos = AR_SERDES_SBUS_64_RX_DFE_A_OFFSET_PD_CNTL_BP,
      ._mask = AR_SERDES_SBUS_64_RX_DFE_A_OFFSET_PD_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_64_RSTDATA & AR_SERDES_SBUS_64_RX_DFE_A_OFFSET_PD_CNTL_MASK,
      ._index = AR_SERDES_SBUS_64_RX_DFE_A_OFFSET_PD_CNTL_QW,
      ._desc = "Set to '1' to power down DFE A offset",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_SEL_DFE_A_DATA_CNTL",
      ._bpos = AR_SERDES_SBUS_64_RX_SEL_DFE_A_DATA_CNTL_BP,
      ._mask = AR_SERDES_SBUS_64_RX_SEL_DFE_A_DATA_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_64_RSTDATA & AR_SERDES_SBUS_64_RX_SEL_DFE_A_DATA_CNTL_MASK,
      ._index = AR_SERDES_SBUS_64_RX_SEL_DFE_A_DATA_CNTL_QW,
      ._desc = "Set to '1' for DFE A data",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_SEL_DFE_A_OFFSET_CNTL",
      ._bpos = AR_SERDES_SBUS_64_RX_SEL_DFE_A_OFFSET_CNTL_BP,
      ._mask = AR_SERDES_SBUS_64_RX_SEL_DFE_A_OFFSET_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_64_RSTDATA & AR_SERDES_SBUS_64_RX_SEL_DFE_A_OFFSET_CNTL_MASK,
      ._index = AR_SERDES_SBUS_64_RX_SEL_DFE_A_OFFSET_CNTL_QW,
      ._desc = "Set to '1' for DFE A offset",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_PHASE_INTERPOLATOR_GATE",
      ._bpos = AR_SERDES_SBUS_64_RX_PHASE_INTERPOLATOR_GATE_BP,
      ._mask = AR_SERDES_SBUS_64_RX_PHASE_INTERPOLATOR_GATE_MASK,
      ._rval = AR_SERDES_SBUS_64_RSTDATA & AR_SERDES_SBUS_64_RX_PHASE_INTERPOLATOR_GATE_MASK,
      ._index = AR_SERDES_SBUS_64_RX_PHASE_INTERPOLATOR_GATE_QW,
      ._desc = "Gate to override Rx phase interpolator bits",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_DFE_PD_GATE",
      ._bpos = AR_SERDES_SBUS_64_RX_DFE_PD_GATE_BP,
      ._mask = AR_SERDES_SBUS_64_RX_DFE_PD_GATE_MASK,
      ._rval = AR_SERDES_SBUS_64_RSTDATA & AR_SERDES_SBUS_64_RX_DFE_PD_GATE_MASK,
      ._index = AR_SERDES_SBUS_64_RX_DFE_PD_GATE_QW,
      ._desc = "Gate for overriding A/B channels PDs",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RX_DFE_GATE",
      ._bpos = AR_SERDES_SBUS_64_RX_DFE_GATE_BP,
      ._mask = AR_SERDES_SBUS_64_RX_DFE_GATE_MASK,
      ._rval = AR_SERDES_SBUS_64_RSTDATA & AR_SERDES_SBUS_64_RX_DFE_GATE_MASK,
      ._index = AR_SERDES_SBUS_64_RX_DFE_GATE_QW,
      ._desc = "Gate to enable DFE registers",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_65_detail[] = {
    { ._name = "RESERVED_31_7",
      ._bpos = AR_SERDES_SBUS_65_RESERVED_31_7_BP,
      ._mask = AR_SERDES_SBUS_65_RESERVED_31_7_MASK,
      ._rval = AR_SERDES_SBUS_65_RSTDATA & AR_SERDES_SBUS_65_RESERVED_31_7_MASK,
      ._index = AR_SERDES_SBUS_65_RESERVED_31_7_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_PHASE_INTERPOLATOR_CNTL",
      ._bpos = AR_SERDES_SBUS_65_RX_PHASE_INTERPOLATOR_CNTL_BP,
      ._mask = AR_SERDES_SBUS_65_RX_PHASE_INTERPOLATOR_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_65_RSTDATA & AR_SERDES_SBUS_65_RX_PHASE_INTERPOLATOR_CNTL_MASK,
      ._index = AR_SERDES_SBUS_65_RX_PHASE_INTERPOLATOR_CNTL_QW,
      ._desc = "Overrides and observes Rx phase interpolator bits",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_67_detail[] = {
    { ._name = "RESERVED_31_30",
      ._bpos = AR_SERDES_SBUS_67_RESERVED_31_30_BP,
      ._mask = AR_SERDES_SBUS_67_RESERVED_31_30_MASK,
      ._rval = AR_SERDES_SBUS_67_RSTDATA & AR_SERDES_SBUS_67_RESERVED_31_30_MASK,
      ._index = AR_SERDES_SBUS_67_RESERVED_31_30_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_DFE_A_CNTL_29_0_",
      ._bpos = AR_SERDES_SBUS_67_RX_DFE_A_CNTL_29_0__BP,
      ._mask = AR_SERDES_SBUS_67_RX_DFE_A_CNTL_29_0__MASK,
      ._rval = AR_SERDES_SBUS_67_RSTDATA & AR_SERDES_SBUS_67_RX_DFE_A_CNTL_29_0__MASK,
      ._index = AR_SERDES_SBUS_67_RX_DFE_A_CNTL_29_0__QW,
      ._desc = "Overrides DFE A values",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_68_detail[] = {
    { ._name = "RESERVED_31_10",
      ._bpos = AR_SERDES_SBUS_68_RESERVED_31_10_BP,
      ._mask = AR_SERDES_SBUS_68_RESERVED_31_10_MASK,
      ._rval = AR_SERDES_SBUS_68_RSTDATA & AR_SERDES_SBUS_68_RESERVED_31_10_MASK,
      ._index = AR_SERDES_SBUS_68_RESERVED_31_10_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_DFE_A_CNTL_39_30_",
      ._bpos = AR_SERDES_SBUS_68_RX_DFE_A_CNTL_39_30__BP,
      ._mask = AR_SERDES_SBUS_68_RX_DFE_A_CNTL_39_30__MASK,
      ._rval = AR_SERDES_SBUS_68_RSTDATA & AR_SERDES_SBUS_68_RX_DFE_A_CNTL_39_30__MASK,
      ._index = AR_SERDES_SBUS_68_RX_DFE_A_CNTL_39_30__QW,
      ._desc = "Overrides DFE A values",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_69_detail[] = {
    { ._name = "RESERVED_31_30",
      ._bpos = AR_SERDES_SBUS_69_RESERVED_31_30_BP,
      ._mask = AR_SERDES_SBUS_69_RESERVED_31_30_MASK,
      ._rval = AR_SERDES_SBUS_69_RSTDATA & AR_SERDES_SBUS_69_RESERVED_31_30_MASK,
      ._index = AR_SERDES_SBUS_69_RESERVED_31_30_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_DFE_B_CNTL_29_0_",
      ._bpos = AR_SERDES_SBUS_69_RX_DFE_B_CNTL_29_0__BP,
      ._mask = AR_SERDES_SBUS_69_RX_DFE_B_CNTL_29_0__MASK,
      ._rval = AR_SERDES_SBUS_69_RSTDATA & AR_SERDES_SBUS_69_RX_DFE_B_CNTL_29_0__MASK,
      ._index = AR_SERDES_SBUS_69_RX_DFE_B_CNTL_29_0__QW,
      ._desc = "Overrides DFE B values",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_6a_detail[] = {
    { ._name = "RESERVED_31_10",
      ._bpos = AR_SERDES_SBUS_6A_RESERVED_31_10_BP,
      ._mask = AR_SERDES_SBUS_6A_RESERVED_31_10_MASK,
      ._rval = AR_SERDES_SBUS_6A_RSTDATA & AR_SERDES_SBUS_6A_RESERVED_31_10_MASK,
      ._index = AR_SERDES_SBUS_6A_RESERVED_31_10_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_DFE_B_CNTL_39_30_",
      ._bpos = AR_SERDES_SBUS_6A_RX_DFE_B_CNTL_39_30__BP,
      ._mask = AR_SERDES_SBUS_6A_RX_DFE_B_CNTL_39_30__MASK,
      ._rval = AR_SERDES_SBUS_6A_RSTDATA & AR_SERDES_SBUS_6A_RX_DFE_B_CNTL_39_30__MASK,
      ._index = AR_SERDES_SBUS_6A_RX_DFE_B_CNTL_39_30__QW,
      ._desc = "Overrides DFE B values",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_6b_detail[] = {
    { ._name = "RESERVED_31_24",
      ._bpos = AR_SERDES_SBUS_6B_RESERVED_31_24_BP,
      ._mask = AR_SERDES_SBUS_6B_RESERVED_31_24_MASK,
      ._rval = AR_SERDES_SBUS_6B_RSTDATA & AR_SERDES_SBUS_6B_RESERVED_31_24_MASK,
      ._index = AR_SERDES_SBUS_6B_RESERVED_31_24_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_DFE_B_EBERT_DAC_CNTL",
      ._bpos = AR_SERDES_SBUS_6B_RX_DFE_B_EBERT_DAC_CNTL_BP,
      ._mask = AR_SERDES_SBUS_6B_RX_DFE_B_EBERT_DAC_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_6B_RSTDATA & AR_SERDES_SBUS_6B_RX_DFE_B_EBERT_DAC_CNTL_MASK,
      ._index = AR_SERDES_SBUS_6B_RX_DFE_B_EBERT_DAC_CNTL_QW,
      ._desc = "Overrides the eBERT DAC on DFE B",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RESERVED_15_8",
      ._bpos = AR_SERDES_SBUS_6B_RESERVED_15_8_BP,
      ._mask = AR_SERDES_SBUS_6B_RESERVED_15_8_MASK,
      ._rval = AR_SERDES_SBUS_6B_RSTDATA & AR_SERDES_SBUS_6B_RESERVED_15_8_MASK,
      ._index = AR_SERDES_SBUS_6B_RESERVED_15_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RX_DFE_A_EBERT_DAC_CNTL",
      ._bpos = AR_SERDES_SBUS_6B_RX_DFE_A_EBERT_DAC_CNTL_BP,
      ._mask = AR_SERDES_SBUS_6B_RX_DFE_A_EBERT_DAC_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_6B_RSTDATA & AR_SERDES_SBUS_6B_RX_DFE_A_EBERT_DAC_CNTL_MASK,
      ._index = AR_SERDES_SBUS_6B_RX_DFE_A_EBERT_DAC_CNTL_QW,
      ._desc = "Overrides the eBERT DAC on DFE A",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_81_detail[] = {
    { ._name = "RESERVED_31_16",
      ._bpos = AR_SERDES_SBUS_81_RESERVED_31_16_BP,
      ._mask = AR_SERDES_SBUS_81_RESERVED_31_16_MASK,
      ._rval = AR_SERDES_SBUS_81_RSTDATA & AR_SERDES_SBUS_81_RESERVED_31_16_MASK,
      ._index = AR_SERDES_SBUS_81_RESERVED_31_16_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "DFE_SCRATCH_PAD_CNTL",
      ._bpos = AR_SERDES_SBUS_81_DFE_SCRATCH_PAD_CNTL_BP,
      ._mask = AR_SERDES_SBUS_81_DFE_SCRATCH_PAD_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_81_RSTDATA & AR_SERDES_SBUS_81_DFE_SCRATCH_PAD_CNTL_MASK,
      ._index = AR_SERDES_SBUS_81_DFE_SCRATCH_PAD_CNTL_QW,
      ._desc = "Scratch pad controls for DFE tuning",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_82_detail[] = {
    { ._name = "RESERVED_31_16",
      ._bpos = AR_SERDES_SBUS_82_RESERVED_31_16_BP,
      ._mask = AR_SERDES_SBUS_82_RESERVED_31_16_MASK,
      ._rval = AR_SERDES_SBUS_82_RSTDATA & AR_SERDES_SBUS_82_RESERVED_31_16_MASK,
      ._index = AR_SERDES_SBUS_82_RESERVED_31_16_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "DFE_USER_CONFIG",
      ._bpos = AR_SERDES_SBUS_82_DFE_USER_CONFIG_BP,
      ._mask = AR_SERDES_SBUS_82_DFE_USER_CONFIG_MASK,
      ._rval = AR_SERDES_SBUS_82_RSTDATA & AR_SERDES_SBUS_82_DFE_USER_CONFIG_MASK,
      ._index = AR_SERDES_SBUS_82_DFE_USER_CONFIG_QW,
      ._desc = "User can use these control/status bits for DFE tuning and storing values",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_8c_detail[] = {
    { ._name = "RESERVED_31",
      ._bpos = AR_SERDES_SBUS_8C_RESERVED_31_BP,
      ._mask = AR_SERDES_SBUS_8C_RESERVED_31_MASK,
      ._rval = AR_SERDES_SBUS_8C_RSTDATA & AR_SERDES_SBUS_8C_RESERVED_31_MASK,
      ._index = AR_SERDES_SBUS_8C_RESERVED_31_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "TX_OVERRIDE_IN_OBS",
      ._bpos = AR_SERDES_SBUS_8C_TX_OVERRIDE_IN_OBS_BP,
      ._mask = AR_SERDES_SBUS_8C_TX_OVERRIDE_IN_OBS_MASK,
      ._rval = AR_SERDES_SBUS_8C_RSTDATA & AR_SERDES_SBUS_8C_TX_OVERRIDE_IN_OBS_MASK,
      ._index = AR_SERDES_SBUS_8C_TX_OVERRIDE_IN_OBS_QW,
      ._desc = "Observes i_tx_override_in port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "TX_OVERRIDE_EN_OBS",
      ._bpos = AR_SERDES_SBUS_8C_TX_OVERRIDE_EN_OBS_BP,
      ._mask = AR_SERDES_SBUS_8C_TX_OVERRIDE_EN_OBS_MASK,
      ._rval = AR_SERDES_SBUS_8C_RSTDATA & AR_SERDES_SBUS_8C_TX_OVERRIDE_EN_OBS_MASK,
      ._index = AR_SERDES_SBUS_8C_TX_OVERRIDE_EN_OBS_QW,
      ._desc = "Observes i_tx_override_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RESERVED_28_0",
      ._bpos = AR_SERDES_SBUS_8C_RESERVED_28_0_BP,
      ._mask = AR_SERDES_SBUS_8C_RESERVED_28_0_MASK,
      ._rval = AR_SERDES_SBUS_8C_RSTDATA & AR_SERDES_SBUS_8C_RESERVED_28_0_MASK,
      ._index = AR_SERDES_SBUS_8C_RESERVED_28_0_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_8e_detail[] = {
    { ._name = "RESERVED_31_20",
      ._bpos = AR_SERDES_SBUS_8E_RESERVED_31_20_BP,
      ._mask = AR_SERDES_SBUS_8E_RESERVED_31_20_MASK,
      ._rval = AR_SERDES_SBUS_8E_RSTDATA & AR_SERDES_SBUS_8E_RESERVED_31_20_MASK,
      ._index = AR_SERDES_SBUS_8E_RESERVED_31_20_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "SBUS_OVERRIDE_CORE_TO_ANLG_CNTL",
      ._bpos = AR_SERDES_SBUS_8E_SBUS_OVERRIDE_CORE_TO_ANLG_CNTL_BP,
      ._mask = AR_SERDES_SBUS_8E_SBUS_OVERRIDE_CORE_TO_ANLG_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_8E_RSTDATA & AR_SERDES_SBUS_8E_SBUS_OVERRIDE_CORE_TO_ANLG_CNTL_MASK,
      ._index = AR_SERDES_SBUS_8E_SBUS_OVERRIDE_CORE_TO_ANLG_CNTL_QW,
      ._desc = "Overrides the i_core_to_cntl ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RESERVED_3_1",
      ._bpos = AR_SERDES_SBUS_8E_RESERVED_3_1_BP,
      ._mask = AR_SERDES_SBUS_8E_RESERVED_3_1_MASK,
      ._rval = AR_SERDES_SBUS_8E_RSTDATA & AR_SERDES_SBUS_8E_RESERVED_3_1_MASK,
      ._index = AR_SERDES_SBUS_8E_RESERVED_3_1_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "SBUS_OVERRIDE_CORE_TO_ANLG_GATE",
      ._bpos = AR_SERDES_SBUS_8E_SBUS_OVERRIDE_CORE_TO_ANLG_GATE_BP,
      ._mask = AR_SERDES_SBUS_8E_SBUS_OVERRIDE_CORE_TO_ANLG_GATE_MASK,
      ._rval = AR_SERDES_SBUS_8E_RSTDATA & AR_SERDES_SBUS_8E_SBUS_OVERRIDE_CORE_TO_ANLG_GATE_MASK,
      ._index = AR_SERDES_SBUS_8E_SBUS_OVERRIDE_CORE_TO_ANLG_GATE_QW,
      ._desc = "Gate to override the i_core_to_cntl ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_8f_detail[] = {
    { ._name = "RESERVED_31_20",
      ._bpos = AR_SERDES_SBUS_8F_RESERVED_31_20_BP,
      ._mask = AR_SERDES_SBUS_8F_RESERVED_31_20_MASK,
      ._rval = AR_SERDES_SBUS_8F_RSTDATA & AR_SERDES_SBUS_8F_RESERVED_31_20_MASK,
      ._index = AR_SERDES_SBUS_8F_RESERVED_31_20_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "SBUS_OVERRIDE_ANLG_TO_CORE_CNTL",
      ._bpos = AR_SERDES_SBUS_8F_SBUS_OVERRIDE_ANLG_TO_CORE_CNTL_BP,
      ._mask = AR_SERDES_SBUS_8F_SBUS_OVERRIDE_ANLG_TO_CORE_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_8F_RSTDATA & AR_SERDES_SBUS_8F_SBUS_OVERRIDE_ANLG_TO_CORE_CNTL_MASK,
      ._index = AR_SERDES_SBUS_8F_SBUS_OVERRIDE_ANLG_TO_CORE_CNTL_QW,
      ._desc = "Overrides the o_analog_to_core ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RESERVED_3_1",
      ._bpos = AR_SERDES_SBUS_8F_RESERVED_3_1_BP,
      ._mask = AR_SERDES_SBUS_8F_RESERVED_3_1_MASK,
      ._rval = AR_SERDES_SBUS_8F_RSTDATA & AR_SERDES_SBUS_8F_RESERVED_3_1_MASK,
      ._index = AR_SERDES_SBUS_8F_RESERVED_3_1_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "SBUS_OVERRIDE_ANLG_TO_CORE_GATE",
      ._bpos = AR_SERDES_SBUS_8F_SBUS_OVERRIDE_ANLG_TO_CORE_GATE_BP,
      ._mask = AR_SERDES_SBUS_8F_SBUS_OVERRIDE_ANLG_TO_CORE_GATE_MASK,
      ._rval = AR_SERDES_SBUS_8F_RSTDATA & AR_SERDES_SBUS_8F_SBUS_OVERRIDE_ANLG_TO_CORE_GATE_MASK,
      ._index = AR_SERDES_SBUS_8F_SBUS_OVERRIDE_ANLG_TO_CORE_GATE_QW,
      ._desc = "Gate to override the o_analog_to_core ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_90_detail[] = {
    { ._name = "LINK_LOOPBACK_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_90_LINK_LOOPBACK_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_90_LINK_LOOPBACK_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_90_RSTDATA & AR_SERDES_SBUS_90_LINK_LOOPBACK_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_90_LINK_LOOPBACK_EN_CNTL_QW,
      ._desc = "Perform link loopback when asserted",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RESERVED_30_0",
      ._bpos = AR_SERDES_SBUS_90_RESERVED_30_0_BP,
      ._mask = AR_SERDES_SBUS_90_RESERVED_30_0_MASK,
      ._rval = AR_SERDES_SBUS_90_RSTDATA & AR_SERDES_SBUS_90_RESERVED_30_0_MASK,
      ._index = AR_SERDES_SBUS_90_RESERVED_30_0_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_92_detail[] = {
    { ._name = "RESERVED_31_9",
      ._bpos = AR_SERDES_SBUS_92_RESERVED_31_9_BP,
      ._mask = AR_SERDES_SBUS_92_RESERVED_31_9_MASK,
      ._rval = AR_SERDES_SBUS_92_RSTDATA & AR_SERDES_SBUS_92_RESERVED_31_9_MASK,
      ._index = AR_SERDES_SBUS_92_RESERVED_31_9_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "PCIE_RX_POWER_DOWN_CNTL",
      ._bpos = AR_SERDES_SBUS_92_PCIE_RX_POWER_DOWN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_92_PCIE_RX_POWER_DOWN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_92_RSTDATA & AR_SERDES_SBUS_92_PCIE_RX_POWER_DOWN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_92_PCIE_RX_POWER_DOWN_CNTL_QW,
      ._desc = "Overrides the i_pcie_rx_power_down ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "PCIE_TX_POWER_DOWN_CNTL",
      ._bpos = AR_SERDES_SBUS_92_PCIE_TX_POWER_DOWN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_92_PCIE_TX_POWER_DOWN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_92_RSTDATA & AR_SERDES_SBUS_92_PCIE_TX_POWER_DOWN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_92_PCIE_TX_POWER_DOWN_CNTL_QW,
      ._desc = "Overrides the i_pcie_tx_power_down ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "PCIE_TX_DETECT_RX_CNTL",
      ._bpos = AR_SERDES_SBUS_92_PCIE_TX_DETECT_RX_CNTL_BP,
      ._mask = AR_SERDES_SBUS_92_PCIE_TX_DETECT_RX_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_92_RSTDATA & AR_SERDES_SBUS_92_PCIE_TX_DETECT_RX_CNTL_MASK,
      ._index = AR_SERDES_SBUS_92_PCIE_TX_DETECT_RX_CNTL_QW,
      ._desc = "Overrides the i_pcie_tx_detect_rx port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "PCIE_RX_ELEC_IDLE_THRESHOLD_CNTL",
      ._bpos = AR_SERDES_SBUS_92_PCIE_RX_ELEC_IDLE_THRESHOLD_CNTL_BP,
      ._mask = AR_SERDES_SBUS_92_PCIE_RX_ELEC_IDLE_THRESHOLD_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_92_RSTDATA & AR_SERDES_SBUS_92_PCIE_RX_ELEC_IDLE_THRESHOLD_CNTL_MASK,
      ._index = AR_SERDES_SBUS_92_PCIE_RX_ELEC_IDLE_THRESHOLD_CNTL_QW,
      ._desc = "Overrides the i_pcie_rx_elec_idle_threshold ports",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "PCIE_GATE",
      ._bpos = AR_SERDES_SBUS_92_PCIE_GATE_BP,
      ._mask = AR_SERDES_SBUS_92_PCIE_GATE_MASK,
      ._rval = AR_SERDES_SBUS_92_RSTDATA & AR_SERDES_SBUS_92_PCIE_GATE_MASK,
      ._index = AR_SERDES_SBUS_92_PCIE_GATE_QW,
      ._desc = "Gate to PCIe-specific circuitry",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_93_detail[] = {
    { ._name = "RESERVED_31_2",
      ._bpos = AR_SERDES_SBUS_93_RESERVED_31_2_BP,
      ._mask = AR_SERDES_SBUS_93_RESERVED_31_2_MASK,
      ._rval = AR_SERDES_SBUS_93_RSTDATA & AR_SERDES_SBUS_93_RESERVED_31_2_MASK,
      ._index = AR_SERDES_SBUS_93_RESERVED_31_2_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "PCIE_RX_ELEC_IDLE_DETECT_CNTL",
      ._bpos = AR_SERDES_SBUS_93_PCIE_RX_ELEC_IDLE_DETECT_CNTL_BP,
      ._mask = AR_SERDES_SBUS_93_PCIE_RX_ELEC_IDLE_DETECT_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_93_RSTDATA & AR_SERDES_SBUS_93_PCIE_RX_ELEC_IDLE_DETECT_CNTL_MASK,
      ._index = AR_SERDES_SBUS_93_PCIE_RX_ELEC_IDLE_DETECT_CNTL_QW,
      ._desc = "Overrides the o_pcie_rx_elec_idle_detect port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "PCIE_RX_ELEC_IDLE_DETECT_GATE",
      ._bpos = AR_SERDES_SBUS_93_PCIE_RX_ELEC_IDLE_DETECT_GATE_BP,
      ._mask = AR_SERDES_SBUS_93_PCIE_RX_ELEC_IDLE_DETECT_GATE_MASK,
      ._rval = AR_SERDES_SBUS_93_RSTDATA & AR_SERDES_SBUS_93_PCIE_RX_ELEC_IDLE_DETECT_GATE_MASK,
      ._index = AR_SERDES_SBUS_93_PCIE_RX_ELEC_IDLE_DETECT_GATE_QW,
      ._desc = "Gate to override the o_pcie_rx_elec_idle_detect port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_95_detail[] = {
    { ._name = "RESERVED_31_23",
      ._bpos = AR_SERDES_SBUS_95_RESERVED_31_23_BP,
      ._mask = AR_SERDES_SBUS_95_RESERVED_31_23_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_RESERVED_31_23_MASK,
      ._index = AR_SERDES_SBUS_95_RESERVED_31_23_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "SIG_OK_PFD_COUNTER_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_PFD_COUNTER_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_PFD_COUNTER_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_PFD_COUNTER_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_PFD_COUNTER_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_USE_SEL_PFD_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_USE_SEL_PFD_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_USE_SEL_PFD_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_USE_SEL_PFD_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_USE_SEL_PFD_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_COMMA_COUNT_LIMIT_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_COMMA_COUNT_LIMIT_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_COMMA_COUNT_LIMIT_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_COMMA_COUNT_LIMIT_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_COMMA_COUNT_LIMIT_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_USE_KR_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_USE_KR_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_USE_KR_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_USE_KR_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_USE_KR_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "PROGRAMMABLE_SIG_OK_OBS",
      ._bpos = AR_SERDES_SBUS_95_PROGRAMMABLE_SIG_OK_OBS_BP,
      ._mask = AR_SERDES_SBUS_95_PROGRAMMABLE_SIG_OK_OBS_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_PROGRAMMABLE_SIG_OK_OBS_MASK,
      ._index = AR_SERDES_SBUS_95_PROGRAMMABLE_SIG_OK_OBS_QW,
      ._desc = "Observes output of programmable portion of o_rx_signal_ok logic",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "SIG_OK_OBS",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_OBS_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_OBS_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_OBS_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_OBS_QW,
      ._desc = "Observes o_rx_signal_ok",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "SIG_OK_OUTPUT_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_OUTPUT_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_OUTPUT_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_OUTPUT_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_OUTPUT_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_FFL_COUNTER_BIT3_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_FFL_COUNTER_BIT3_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_FFL_COUNTER_BIT3_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_FFL_COUNTER_BIT3_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_FFL_COUNTER_BIT3_EN_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_FFL_COUNTER_BIT2_EN_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_FFL_COUNTER_BIT2_EN_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_FFL_COUNTER_BIT2_EN_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_FFL_COUNTER_BIT2_EN_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_FFL_COUNTER_BIT2_EN_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_USE_FINE_FLOCK_CNTR_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_USE_FINE_FLOCK_CNTR_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_USE_FINE_FLOCK_CNTR_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_USE_FINE_FLOCK_CNTR_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_USE_FINE_FLOCK_CNTR_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_USE_SLIP_IN_PROGRESS_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_USE_SLIP_IN_PROGRESS_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_USE_SLIP_IN_PROGRESS_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_USE_SLIP_IN_PROGRESS_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_USE_SLIP_IN_PROGRESS_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_USE_RX_RDY_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_USE_RX_RDY_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_USE_RX_RDY_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_USE_RX_RDY_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_USE_RX_RDY_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_USE_COMMA_DET_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_USE_COMMA_DET_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_USE_COMMA_DET_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_USE_COMMA_DET_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_USE_COMMA_DET_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_USE_SIGNAL_STRENGTH_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_USE_SIGNAL_STRENGTH_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_USE_SIGNAL_STRENGTH_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_USE_SIGNAL_STRENGTH_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_USE_SIGNAL_STRENGTH_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_USE_ELEC_IDLE_CNTL",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_USE_ELEC_IDLE_CNTL_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_USE_ELEC_IDLE_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_USE_ELEC_IDLE_CNTL_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_USE_ELEC_IDLE_CNTL_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_USE_RX_FINE_FLOCK_CNT",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_USE_RX_FINE_FLOCK_CNT_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_USE_RX_FINE_FLOCK_CNT_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_USE_RX_FINE_FLOCK_CNT_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_USE_RX_FINE_FLOCK_CNT_QW,
      ._desc = "See o_rx_signal_ok description",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "SIG_OK_EN_PRGRMBLE_INPUTS_GATE",
      ._bpos = AR_SERDES_SBUS_95_SIG_OK_EN_PRGRMBLE_INPUTS_GATE_BP,
      ._mask = AR_SERDES_SBUS_95_SIG_OK_EN_PRGRMBLE_INPUTS_GATE_MASK,
      ._rval = AR_SERDES_SBUS_95_RSTDATA & AR_SERDES_SBUS_95_SIG_OK_EN_PRGRMBLE_INPUTS_GATE_MASK,
      ._index = AR_SERDES_SBUS_95_SIG_OK_EN_PRGRMBLE_INPUTS_GATE_QW,
      ._desc = "Enables all of the o_rx_signal_ok programmable inputs",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ad_detail[] = {
    { ._name = "RESERVED_31_2",
      ._bpos = AR_SERDES_SBUS_AD_RESERVED_31_2_BP,
      ._mask = AR_SERDES_SBUS_AD_RESERVED_31_2_MASK,
      ._rval = AR_SERDES_SBUS_AD_RSTDATA & AR_SERDES_SBUS_AD_RESERVED_31_2_MASK,
      ._index = AR_SERDES_SBUS_AD_RESERVED_31_2_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "KR_TRAINING_EN",
      ._bpos = AR_SERDES_SBUS_AD_KR_TRAINING_EN_BP,
      ._mask = AR_SERDES_SBUS_AD_KR_TRAINING_EN_MASK,
      ._rval = AR_SERDES_SBUS_AD_RSTDATA & AR_SERDES_SBUS_AD_KR_TRAINING_EN_MASK,
      ._index = AR_SERDES_SBUS_AD_KR_TRAINING_EN_QW,
      ._desc = "Overrides the i_kr_training_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "KR_TRAINING_EN_GATE",
      ._bpos = AR_SERDES_SBUS_AD_KR_TRAINING_EN_GATE_BP,
      ._mask = AR_SERDES_SBUS_AD_KR_TRAINING_EN_GATE_MASK,
      ._rval = AR_SERDES_SBUS_AD_RSTDATA & AR_SERDES_SBUS_AD_KR_TRAINING_EN_GATE_MASK,
      ._index = AR_SERDES_SBUS_AD_KR_TRAINING_EN_GATE_QW,
      ._desc = "Gate to override i_kr_training_en port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ae_detail[] = {
    { ._name = "RESERVED_31_2",
      ._bpos = AR_SERDES_SBUS_AE_RESERVED_31_2_BP,
      ._mask = AR_SERDES_SBUS_AE_RESERVED_31_2_MASK,
      ._rval = AR_SERDES_SBUS_AE_RSTDATA & AR_SERDES_SBUS_AE_RESERVED_31_2_MASK,
      ._index = AR_SERDES_SBUS_AE_RESERVED_31_2_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "KR_RESTART_TRAINING",
      ._bpos = AR_SERDES_SBUS_AE_KR_RESTART_TRAINING_BP,
      ._mask = AR_SERDES_SBUS_AE_KR_RESTART_TRAINING_MASK,
      ._rval = AR_SERDES_SBUS_AE_RSTDATA & AR_SERDES_SBUS_AE_KR_RESTART_TRAINING_MASK,
      ._index = AR_SERDES_SBUS_AE_KR_RESTART_TRAINING_QW,
      ._desc = "Overrides the i_kr_restart_training port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "KR_RESTART_TRAINING_GATE",
      ._bpos = AR_SERDES_SBUS_AE_KR_RESTART_TRAINING_GATE_BP,
      ._mask = AR_SERDES_SBUS_AE_KR_RESTART_TRAINING_GATE_MASK,
      ._rval = AR_SERDES_SBUS_AE_RSTDATA & AR_SERDES_SBUS_AE_KR_RESTART_TRAINING_GATE_MASK,
      ._index = AR_SERDES_SBUS_AE_KR_RESTART_TRAINING_GATE_QW,
      ._desc = "Gate to override the i_kr_restart_training port",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_af_detail[] = {
    { ._name = "RESERVED_31_19",
      ._bpos = AR_SERDES_SBUS_AF_RESERVED_31_19_BP,
      ._mask = AR_SERDES_SBUS_AF_RESERVED_31_19_MASK,
      ._rval = AR_SERDES_SBUS_AF_RSTDATA & AR_SERDES_SBUS_AF_RESERVED_31_19_MASK,
      ._index = AR_SERDES_SBUS_AF_RESERVED_31_19_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "KR_TRAINING_STATE",
      ._bpos = AR_SERDES_SBUS_AF_KR_TRAINING_STATE_BP,
      ._mask = AR_SERDES_SBUS_AF_KR_TRAINING_STATE_MASK,
      ._rval = AR_SERDES_SBUS_AF_RSTDATA & AR_SERDES_SBUS_AF_KR_TRAINING_STATE_MASK,
      ._index = AR_SERDES_SBUS_AF_KR_TRAINING_STATE_QW,
      ._desc = "Observation of KR training FSM state: 0 −> INITIALIZE 1 −> SEND_TRAINING 2 −> TRAIN_LOCAL 3 −> TRAIN_REMOTE 4 −> LINK_READY 5 −> SEND_DATA 6,7 −> TRAINING_FAILURE",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "RESERVED_15_9",
      ._bpos = AR_SERDES_SBUS_AF_RESERVED_15_9_BP,
      ._mask = AR_SERDES_SBUS_AF_RESERVED_15_9_MASK,
      ._rval = AR_SERDES_SBUS_AF_RSTDATA & AR_SERDES_SBUS_AF_RESERVED_15_9_MASK,
      ._index = AR_SERDES_SBUS_AF_RESERVED_15_9_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "KR_TRAINING",
      ._bpos = AR_SERDES_SBUS_AF_KR_TRAINING_BP,
      ._mask = AR_SERDES_SBUS_AF_KR_TRAINING_MASK,
      ._rval = AR_SERDES_SBUS_AF_RSTDATA & AR_SERDES_SBUS_AF_KR_TRAINING_MASK,
      ._index = AR_SERDES_SBUS_AF_KR_TRAINING_QW,
      ._desc = "Observation of kr_training variable",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "KR_FRAME_LOCK",
      ._bpos = AR_SERDES_SBUS_AF_KR_FRAME_LOCK_BP,
      ._mask = AR_SERDES_SBUS_AF_KR_FRAME_LOCK_MASK,
      ._rval = AR_SERDES_SBUS_AF_RSTDATA & AR_SERDES_SBUS_AF_KR_FRAME_LOCK_MASK,
      ._index = AR_SERDES_SBUS_AF_KR_FRAME_LOCK_QW,
      ._desc = "Observation of kr frame_lock variable",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "KR_RX_FAULT",
      ._bpos = AR_SERDES_SBUS_AF_KR_RX_FAULT_BP,
      ._mask = AR_SERDES_SBUS_AF_KR_RX_FAULT_MASK,
      ._rval = AR_SERDES_SBUS_AF_RSTDATA & AR_SERDES_SBUS_AF_KR_RX_FAULT_MASK,
      ._index = AR_SERDES_SBUS_AF_KR_RX_FAULT_QW,
      ._desc = "Observation of o_rx_fault",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "KR_TX_FAULT",
      ._bpos = AR_SERDES_SBUS_AF_KR_TX_FAULT_BP,
      ._mask = AR_SERDES_SBUS_AF_KR_TX_FAULT_MASK,
      ._rval = AR_SERDES_SBUS_AF_RSTDATA & AR_SERDES_SBUS_AF_KR_TX_FAULT_MASK,
      ._index = AR_SERDES_SBUS_AF_KR_TX_FAULT_QW,
      ._desc = "Observation of o_tx_fault",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "KR_PMD_FAULT",
      ._bpos = AR_SERDES_SBUS_AF_KR_PMD_FAULT_BP,
      ._mask = AR_SERDES_SBUS_AF_KR_PMD_FAULT_MASK,
      ._rval = AR_SERDES_SBUS_AF_RSTDATA & AR_SERDES_SBUS_AF_KR_PMD_FAULT_MASK,
      ._index = AR_SERDES_SBUS_AF_KR_PMD_FAULT_QW,
      ._desc = "Observation of o_kr_pmd_fault",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "KR_SIGNAL_DETECT",
      ._bpos = AR_SERDES_SBUS_AF_KR_SIGNAL_DETECT_BP,
      ._mask = AR_SERDES_SBUS_AF_KR_SIGNAL_DETECT_MASK,
      ._rval = AR_SERDES_SBUS_AF_RSTDATA & AR_SERDES_SBUS_AF_KR_SIGNAL_DETECT_MASK,
      ._index = AR_SERDES_SBUS_AF_KR_SIGNAL_DETECT_QW,
      ._desc = "Observation of o_kr_signal_detect",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "KR_TRAINING_FAILURE",
      ._bpos = AR_SERDES_SBUS_AF_KR_TRAINING_FAILURE_BP,
      ._mask = AR_SERDES_SBUS_AF_KR_TRAINING_FAILURE_MASK,
      ._rval = AR_SERDES_SBUS_AF_RSTDATA & AR_SERDES_SBUS_AF_KR_TRAINING_FAILURE_MASK,
      ._index = AR_SERDES_SBUS_AF_KR_TRAINING_FAILURE_QW,
      ._desc = "Observation of o_kr_training_failure",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "KR_RX_TRAINED",
      ._bpos = AR_SERDES_SBUS_AF_KR_RX_TRAINED_BP,
      ._mask = AR_SERDES_SBUS_AF_KR_RX_TRAINED_MASK,
      ._rval = AR_SERDES_SBUS_AF_RSTDATA & AR_SERDES_SBUS_AF_KR_RX_TRAINED_MASK,
      ._index = AR_SERDES_SBUS_AF_KR_RX_TRAINED_QW,
      ._desc = "Overrides the rx_trained variable",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "KR_RX_TRAINED_GATE",
      ._bpos = AR_SERDES_SBUS_AF_KR_RX_TRAINED_GATE_BP,
      ._mask = AR_SERDES_SBUS_AF_KR_RX_TRAINED_GATE_MASK,
      ._rval = AR_SERDES_SBUS_AF_RSTDATA & AR_SERDES_SBUS_AF_KR_RX_TRAINED_GATE_MASK,
      ._index = AR_SERDES_SBUS_AF_KR_RX_TRAINED_GATE_QW,
      ._desc = "Gate to override the rx_trained variable",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_b3_detail[] = {
    { ._name = "RESERVED_31_2",
      ._bpos = AR_SERDES_SBUS_B3_RESERVED_31_2_BP,
      ._mask = AR_SERDES_SBUS_B3_RESERVED_31_2_MASK,
      ._rval = AR_SERDES_SBUS_B3_RSTDATA & AR_SERDES_SBUS_B3_RESERVED_31_2_MASK,
      ._index = AR_SERDES_SBUS_B3_RESERVED_31_2_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "KR_REMOTE_RX_RDY",
      ._bpos = AR_SERDES_SBUS_B3_KR_REMOTE_RX_RDY_BP,
      ._mask = AR_SERDES_SBUS_B3_KR_REMOTE_RX_RDY_MASK,
      ._rval = AR_SERDES_SBUS_B3_RSTDATA & AR_SERDES_SBUS_B3_KR_REMOTE_RX_RDY_MASK,
      ._index = AR_SERDES_SBUS_B3_KR_REMOTE_RX_RDY_QW,
      ._desc = "Overrides the remote_rx_ready variable",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "KR_REMOTE_RX_RDY_GATE",
      ._bpos = AR_SERDES_SBUS_B3_KR_REMOTE_RX_RDY_GATE_BP,
      ._mask = AR_SERDES_SBUS_B3_KR_REMOTE_RX_RDY_GATE_MASK,
      ._rval = AR_SERDES_SBUS_B3_RSTDATA & AR_SERDES_SBUS_B3_KR_REMOTE_RX_RDY_GATE_MASK,
      ._index = AR_SERDES_SBUS_B3_KR_REMOTE_RX_RDY_GATE_QW,
      ._desc = "Gate to override the remote_rx_ready variable",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_fc_detail[] = {
    { ._name = "RESERVED_31_24",
      ._bpos = AR_SERDES_SBUS_FC_RESERVED_31_24_BP,
      ._mask = AR_SERDES_SBUS_FC_RESERVED_31_24_MASK,
      ._rval = AR_SERDES_SBUS_FC_RSTDATA & AR_SERDES_SBUS_FC_RESERVED_31_24_MASK,
      ._index = AR_SERDES_SBUS_FC_RESERVED_31_24_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "BROADCAST_INV_2_CNTL",
      ._bpos = AR_SERDES_SBUS_FC_BROADCAST_INV_2_CNTL_BP,
      ._mask = AR_SERDES_SBUS_FC_BROADCAST_INV_2_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_FC_RSTDATA & AR_SERDES_SBUS_FC_BROADCAST_INV_2_CNTL_MASK,
      ._index = AR_SERDES_SBUS_FC_BROADCAST_INV_2_CNTL_QW,
      ._desc = "Second alternative standard SerDes broadcast address - inverted",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RESERVED_15_12",
      ._bpos = AR_SERDES_SBUS_FC_RESERVED_15_12_BP,
      ._mask = AR_SERDES_SBUS_FC_RESERVED_15_12_MASK,
      ._rval = AR_SERDES_SBUS_FC_RSTDATA & AR_SERDES_SBUS_FC_RESERVED_15_12_MASK,
      ._index = AR_SERDES_SBUS_FC_RESERVED_15_12_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "BROADCAST_INV_CNT",
      ._bpos = AR_SERDES_SBUS_FC_BROADCAST_INV_CNT_BP,
      ._mask = AR_SERDES_SBUS_FC_BROADCAST_INV_CNT_MASK,
      ._rval = AR_SERDES_SBUS_FC_RSTDATA & AR_SERDES_SBUS_FC_BROADCAST_INV_CNT_MASK,
      ._index = AR_SERDES_SBUS_FC_BROADCAST_INV_CNT_QW,
      ._desc = "Alternative standard SerDes broadcast address - inverted",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "RESERVED_3_1",
      ._bpos = AR_SERDES_SBUS_FC_RESERVED_3_1_BP,
      ._mask = AR_SERDES_SBUS_FC_RESERVED_3_1_MASK,
      ._rval = AR_SERDES_SBUS_FC_RSTDATA & AR_SERDES_SBUS_FC_RESERVED_3_1_MASK,
      ._index = AR_SERDES_SBUS_FC_RESERVED_3_1_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "IGNORE_BROADCAST_CNTL",
      ._bpos = AR_SERDES_SBUS_FC_IGNORE_BROADCAST_CNTL_BP,
      ._mask = AR_SERDES_SBUS_FC_IGNORE_BROADCAST_CNTL_MASK,
      ._rval = AR_SERDES_SBUS_FC_RSTDATA & AR_SERDES_SBUS_FC_IGNORE_BROADCAST_CNTL_MASK,
      ._index = AR_SERDES_SBUS_FC_IGNORE_BROADCAST_CNTL_QW,
      ._desc = "Set to '1' for SBus Rx to ignore broadcast commands",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_fd_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_FD_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_FD_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_FD_RSTDATA & AR_SERDES_SBUS_FD_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_FD_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "SERDES_SBUS_TEST_READ_WRITE",
      ._bpos = AR_SERDES_SBUS_FD_SERDES_SBUS_TEST_READ_WRITE_BP,
      ._mask = AR_SERDES_SBUS_FD_SERDES_SBUS_TEST_READ_WRITE_MASK,
      ._rval = AR_SERDES_SBUS_FD_RSTDATA & AR_SERDES_SBUS_FD_SERDES_SBUS_TEST_READ_WRITE_MASK,
      ._index = AR_SERDES_SBUS_FD_SERDES_SBUS_TEST_READ_WRITE_QW,
      ._desc = "This is a spare register where the user can write a value into and read from, in order to test SBus operations",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_fe_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_FE_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_FE_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_FE_RSTDATA & AR_SERDES_SBUS_FE_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_FE_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "SERDES_VARIANT_IDCODE_OBS",
      ._bpos = AR_SERDES_SBUS_FE_SERDES_VARIANT_IDCODE_OBS_BP,
      ._mask = AR_SERDES_SBUS_FE_SERDES_VARIANT_IDCODE_OBS_MASK,
      ._rval = AR_SERDES_SBUS_FE_RSTDATA & AR_SERDES_SBUS_FE_SERDES_VARIANT_IDCODE_OBS_MASK,
      ._index = AR_SERDES_SBUS_FE_SERDES_VARIANT_IDCODE_OBS_QW,
      ._desc = "This IDCODE depends on the type of SerDes being used",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ff_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_FF_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_FF_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_FF_RSTDATA & AR_SERDES_SBUS_FF_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_FF_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "IDCODE",
      ._bpos = AR_SERDES_SBUS_FF_IDCODE_BP,
      ._mask = AR_SERDES_SBUS_FF_IDCODE_MASK,
      ._rval = AR_SERDES_SBUS_FF_RSTDATA & AR_SERDES_SBUS_FF_IDCODE_MASK,
      ._index = AR_SERDES_SBUS_FF_IDCODE_QW,
      ._desc = "Defaults to 8'h01 for SerDes Macros",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_pmro_ctrl_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_PMRO_CTRL_RESERVED_31_8_BP,
      ._mask = AR_SERDES_PMRO_CTRL_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_PMRO_CTRL_RSTDATA & AR_SERDES_PMRO_CTRL_RESERVED_31_8_MASK,
      ._index = AR_SERDES_PMRO_CTRL_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "OSC_RUN_DELAY",
      ._bpos = AR_SERDES_PMRO_CTRL_OSC_RUN_DELAY_BP,
      ._mask = AR_SERDES_PMRO_CTRL_OSC_RUN_DELAY_MASK,
      ._rval = AR_SERDES_PMRO_CTRL_RSTDATA & AR_SERDES_PMRO_CTRL_OSC_RUN_DELAY_MASK,
      ._index = AR_SERDES_PMRO_CTRL_OSC_RUN_DELAY_QW,
      ._desc = "This bit is a one state delayed version of the run signal that is provided for monitoring purposes",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "PMRO_ACTIVE_DELAY",
      ._bpos = AR_SERDES_PMRO_CTRL_PMRO_ACTIVE_DELAY_BP,
      ._mask = AR_SERDES_PMRO_CTRL_PMRO_ACTIVE_DELAY_MASK,
      ._rval = AR_SERDES_PMRO_CTRL_RSTDATA & AR_SERDES_PMRO_CTRL_PMRO_ACTIVE_DELAY_MASK,
      ._index = AR_SERDES_PMRO_CTRL_PMRO_ACTIVE_DELAY_QW,
      ._desc = "This bit is set or cleared one state after bit 5 is set or cleared",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "PMRO_ACTIVE",
      ._bpos = AR_SERDES_PMRO_CTRL_PMRO_ACTIVE_BP,
      ._mask = AR_SERDES_PMRO_CTRL_PMRO_ACTIVE_MASK,
      ._rval = AR_SERDES_PMRO_CTRL_RSTDATA & AR_SERDES_PMRO_CTRL_PMRO_ACTIVE_MASK,
      ._index = AR_SERDES_PMRO_CTRL_PMRO_ACTIVE_QW,
      ._desc = "The run signal is synchronized into the oscillator clock domain by a double synchronizer",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "STATE_BIT_3",
      ._bpos = AR_SERDES_PMRO_CTRL_STATE_BIT_3_BP,
      ._mask = AR_SERDES_PMRO_CTRL_STATE_BIT_3_MASK,
      ._rval = AR_SERDES_PMRO_CTRL_RSTDATA & AR_SERDES_PMRO_CTRL_STATE_BIT_3_MASK,
      ._index = AR_SERDES_PMRO_CTRL_STATE_BIT_3_QW,
      ._desc = "This is the third state bit and is set one state after bit 3 is set",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "STATE_BIT_2",
      ._bpos = AR_SERDES_PMRO_CTRL_STATE_BIT_2_BP,
      ._mask = AR_SERDES_PMRO_CTRL_STATE_BIT_2_MASK,
      ._rval = AR_SERDES_PMRO_CTRL_RSTDATA & AR_SERDES_PMRO_CTRL_STATE_BIT_2_MASK,
      ._index = AR_SERDES_PMRO_CTRL_STATE_BIT_2_QW,
      ._desc = "This is the third state bit and is set one state after bit 2 is set",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "STATE_BIT_1",
      ._bpos = AR_SERDES_PMRO_CTRL_STATE_BIT_1_BP,
      ._mask = AR_SERDES_PMRO_CTRL_STATE_BIT_1_MASK,
      ._rval = AR_SERDES_PMRO_CTRL_RSTDATA & AR_SERDES_PMRO_CTRL_STATE_BIT_1_MASK,
      ._index = AR_SERDES_PMRO_CTRL_STATE_BIT_1_QW,
      ._desc = "This is the second state bit and is set one state after bit 1 is set",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "STATE_BIT_0",
      ._bpos = AR_SERDES_PMRO_CTRL_STATE_BIT_0_BP,
      ._mask = AR_SERDES_PMRO_CTRL_STATE_BIT_0_MASK,
      ._rval = AR_SERDES_PMRO_CTRL_RSTDATA & AR_SERDES_PMRO_CTRL_STATE_BIT_0_MASK,
      ._index = AR_SERDES_PMRO_CTRL_STATE_BIT_0_QW,
      ._desc = "This is the first state bit and is set one state after bit0 is set",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "OSC_RUN",
      ._bpos = AR_SERDES_PMRO_CTRL_OSC_RUN_BP,
      ._mask = AR_SERDES_PMRO_CTRL_OSC_RUN_MASK,
      ._rval = AR_SERDES_PMRO_CTRL_RSTDATA & AR_SERDES_PMRO_CTRL_OSC_RUN_MASK,
      ._index = AR_SERDES_PMRO_CTRL_OSC_RUN_QW,
      ._desc = "This is the only writable bit of the register, all other bits are read only",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_pmro_std_vt_config_detail[] = {
    { ._name = "RESERVED_31_16",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_RESERVED_31_16_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_RESERVED_31_16_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_RESERVED_31_16_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_RESERVED_31_16_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "BUFFER",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_BUFFER_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_BUFFER_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_BUFFER_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_BUFFER_QW,
      ._desc = "Buffer",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "AOI221_SLOW_IN_SLOW_AND",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_SLOW_IN_SLOW_AND_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_SLOW_IN_SLOW_AND_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_SLOW_IN_SLOW_AND_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_SLOW_IN_SLOW_AND_QW,
      ._desc = "AOI221 gate, slowest input of slowest AND gate",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "AOI221_FAST_IN_SLOW_AND",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_FAST_IN_SLOW_AND_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_FAST_IN_SLOW_AND_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_FAST_IN_SLOW_AND_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_FAST_IN_SLOW_AND_QW,
      ._desc = "AOI221 gate, fastest input of slowest AND gate",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "AOI221_SLOW_IN_FAST_AND",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_SLOW_IN_FAST_AND_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_SLOW_IN_FAST_AND_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_SLOW_IN_FAST_AND_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_SLOW_IN_FAST_AND_QW,
      ._desc = "AOI221 gate, slowest input of fastest AND gate",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "AOI221_FAST_IN_FAST_AND",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_FAST_IN_FAST_AND_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_FAST_IN_FAST_AND_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_FAST_IN_FAST_AND_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_AOI221_FAST_IN_FAST_AND_QW,
      ._desc = "AOI221 gate, fastest input of fastest AND gate",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NOR_THREE_SLOW_IN",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_NOR_THREE_SLOW_IN_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_NOR_THREE_SLOW_IN_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_NOR_THREE_SLOW_IN_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_NOR_THREE_SLOW_IN_QW,
      ._desc = "Three input NOR gate, slowest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NAND_THREE_SLOW_IN",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_NAND_THREE_SLOW_IN_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_NAND_THREE_SLOW_IN_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_NAND_THREE_SLOW_IN_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_NAND_THREE_SLOW_IN_QW,
      ._desc = "Three input NAND gate, slowest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "XOR_TWO_SLOW_IN_NIM",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_SLOW_IN_NIM_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_SLOW_IN_NIM_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_SLOW_IN_NIM_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_SLOW_IN_NIM_QW,
      ._desc = "Two input XOR gate, slowest input, non-inverting mode (second input tied low)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "XOR_TWO_FAST_IN_NIM",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_FAST_IN_NIM_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_FAST_IN_NIM_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_FAST_IN_NIM_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_FAST_IN_NIM_QW,
      ._desc = "Two input XOR gate, fastest input, non-inverting mode (second input tied low)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "XOR_TWO_SLOW_IN_IM",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_SLOW_IN_IM_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_SLOW_IN_IM_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_SLOW_IN_IM_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_SLOW_IN_IM_QW,
      ._desc = "Two input XOR gate, slowest input, inverting mode (second input tied high)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "XOR_TWO_FAST_IN_IM",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_FAST_IN_IM_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_FAST_IN_IM_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_FAST_IN_IM_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_XOR_TWO_FAST_IN_IM_QW,
      ._desc = "Two input XOR gate, fastest input, inverting mode (second input tied high)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NOR_TWO_SLOW_IN",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_NOR_TWO_SLOW_IN_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_NOR_TWO_SLOW_IN_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_NOR_TWO_SLOW_IN_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_NOR_TWO_SLOW_IN_QW,
      ._desc = "Two input NOR gate, slowest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NOR_TWO_FAST_IN",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_NOR_TWO_FAST_IN_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_NOR_TWO_FAST_IN_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_NOR_TWO_FAST_IN_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_NOR_TWO_FAST_IN_QW,
      ._desc = "Two input NOR gate, fastest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NAND_TWO_SLOW_IN",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_NAND_TWO_SLOW_IN_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_NAND_TWO_SLOW_IN_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_NAND_TWO_SLOW_IN_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_NAND_TWO_SLOW_IN_QW,
      ._desc = "Two input NAND gate, slowest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NAND_TWO_FAST_IN",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_NAND_TWO_FAST_IN_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_NAND_TWO_FAST_IN_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_NAND_TWO_FAST_IN_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_NAND_TWO_FAST_IN_QW,
      ._desc = "Two input NAND gate, fastest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "INVERTER",
      ._bpos = AR_SERDES_PMRO_STD_VT_CONFIG_INVERTER_BP,
      ._mask = AR_SERDES_PMRO_STD_VT_CONFIG_INVERTER_MASK,
      ._rval = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_STD_VT_CONFIG_INVERTER_MASK,
      ._index = AR_SERDES_PMRO_STD_VT_CONFIG_INVERTER_QW,
      ._desc = "Inverter",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_pmro_hi_vt_config_detail[] = {
    { ._name = "RESERVED_31_16",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_RESERVED_31_16_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_RESERVED_31_16_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_RESERVED_31_16_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_RESERVED_31_16_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "BUFFER",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_BUFFER_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_BUFFER_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_BUFFER_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_BUFFER_QW,
      ._desc = "Buffer",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "AOI221_SLOW_IN_SLOW_AND",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_SLOW_IN_SLOW_AND_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_SLOW_IN_SLOW_AND_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_SLOW_IN_SLOW_AND_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_SLOW_IN_SLOW_AND_QW,
      ._desc = "AOI221 gate, slowest input of slowest AND gate",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "AOI221_FAST_IN_SLOW_AND",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_FAST_IN_SLOW_AND_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_FAST_IN_SLOW_AND_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_FAST_IN_SLOW_AND_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_FAST_IN_SLOW_AND_QW,
      ._desc = "AOI221 gate, fastest input of slowest AND gate",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "AOI221_SLOW_IN_FAST_AND",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_SLOW_IN_FAST_AND_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_SLOW_IN_FAST_AND_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_SLOW_IN_FAST_AND_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_SLOW_IN_FAST_AND_QW,
      ._desc = "AOI221 gate, slowest input of fastest AND gate",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "AOI221_FAST_IN_FAST_AND",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_FAST_IN_FAST_AND_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_FAST_IN_FAST_AND_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_FAST_IN_FAST_AND_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_AOI221_FAST_IN_FAST_AND_QW,
      ._desc = "AOI221 gate, fastest input of fastest AND gate",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NOR_THREE_SLOW_IN",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_NOR_THREE_SLOW_IN_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_NOR_THREE_SLOW_IN_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_NOR_THREE_SLOW_IN_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_NOR_THREE_SLOW_IN_QW,
      ._desc = "Three input NOR gate, slowest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NAND_THREE_SLOW_IN",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_NAND_THREE_SLOW_IN_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_NAND_THREE_SLOW_IN_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_NAND_THREE_SLOW_IN_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_NAND_THREE_SLOW_IN_QW,
      ._desc = "Three input NAND gate, slowest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "XOR_TWO_SLOW_IN_NIM",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_SLOW_IN_NIM_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_SLOW_IN_NIM_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_SLOW_IN_NIM_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_SLOW_IN_NIM_QW,
      ._desc = "Two input XOR gate, slowest input, non-inverting mode (second input tied low)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "XOR_TWO_FAST_IN_NIM",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_FAST_IN_NIM_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_FAST_IN_NIM_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_FAST_IN_NIM_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_FAST_IN_NIM_QW,
      ._desc = "Two input XOR gate, fastest input, non-inverting mode (second input tied low)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "XOR_TWO_SLOW_IN_IM",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_SLOW_IN_IM_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_SLOW_IN_IM_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_SLOW_IN_IM_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_SLOW_IN_IM_QW,
      ._desc = "Two input XOR gate, slowest input, inverting mode (second input tied high)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "XOR_TWO_FAST_IN_IM",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_FAST_IN_IM_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_FAST_IN_IM_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_FAST_IN_IM_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_XOR_TWO_FAST_IN_IM_QW,
      ._desc = "Two input XOR gate, fastest input, inverting mode (second input tied high)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NOR_TWO_SLOW_IN",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_NOR_TWO_SLOW_IN_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_NOR_TWO_SLOW_IN_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_NOR_TWO_SLOW_IN_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_NOR_TWO_SLOW_IN_QW,
      ._desc = "Two input NOR gate, slowest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NOR_TWO_FAST_IN",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_NOR_TWO_FAST_IN_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_NOR_TWO_FAST_IN_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_NOR_TWO_FAST_IN_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_NOR_TWO_FAST_IN_QW,
      ._desc = "Two input NOR gate, fastest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NAND_TWO_SLOW_IN",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_NAND_TWO_SLOW_IN_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_NAND_TWO_SLOW_IN_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_NAND_TWO_SLOW_IN_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_NAND_TWO_SLOW_IN_QW,
      ._desc = "Two input NAND gate, slowest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NAND_TWO_FAST_IN",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_NAND_TWO_FAST_IN_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_NAND_TWO_FAST_IN_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_NAND_TWO_FAST_IN_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_NAND_TWO_FAST_IN_QW,
      ._desc = "Two input NAND gate, fastest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "INVERTER",
      ._bpos = AR_SERDES_PMRO_HI_VT_CONFIG_INVERTER_BP,
      ._mask = AR_SERDES_PMRO_HI_VT_CONFIG_INVERTER_MASK,
      ._rval = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_HI_VT_CONFIG_INVERTER_MASK,
      ._index = AR_SERDES_PMRO_HI_VT_CONFIG_INVERTER_QW,
      ._desc = "Inverter",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_pmro_lo_vt_config_detail[] = {
    { ._name = "RESERVED_31_16",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_RESERVED_31_16_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_RESERVED_31_16_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_RESERVED_31_16_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_RESERVED_31_16_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "BUFFER",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_BUFFER_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_BUFFER_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_BUFFER_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_BUFFER_QW,
      ._desc = "Buffer",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "AOI221_SLOW_IN_SLOW_AND",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_SLOW_IN_SLOW_AND_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_SLOW_IN_SLOW_AND_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_SLOW_IN_SLOW_AND_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_SLOW_IN_SLOW_AND_QW,
      ._desc = "AOI221 gate, slowest input of slowest AND gate",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "AOI221_FAST_IN_SLOW_AND",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_FAST_IN_SLOW_AND_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_FAST_IN_SLOW_AND_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_FAST_IN_SLOW_AND_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_FAST_IN_SLOW_AND_QW,
      ._desc = "AOI221 gate, fastest input of slowest AND gate",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "AOI221_SLOW_IN_FAST_AND",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_SLOW_IN_FAST_AND_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_SLOW_IN_FAST_AND_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_SLOW_IN_FAST_AND_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_SLOW_IN_FAST_AND_QW,
      ._desc = "AOI221 gate, slowest input of fastest AND gate",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "AOI221_FAST_IN_FAST_AND",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_FAST_IN_FAST_AND_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_FAST_IN_FAST_AND_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_FAST_IN_FAST_AND_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_AOI221_FAST_IN_FAST_AND_QW,
      ._desc = "AOI221 gate, fastest input of fastest AND gate",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NOR_THREE_SLOW_IN",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_NOR_THREE_SLOW_IN_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_NOR_THREE_SLOW_IN_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_NOR_THREE_SLOW_IN_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_NOR_THREE_SLOW_IN_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NAND_THREE_SLOW_IN",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_NAND_THREE_SLOW_IN_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_NAND_THREE_SLOW_IN_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_NAND_THREE_SLOW_IN_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_NAND_THREE_SLOW_IN_QW,
      ._desc = "Three input NAND gate, slowest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "XOR_TWO_SLOW_IN_NIM",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_SLOW_IN_NIM_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_SLOW_IN_NIM_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_SLOW_IN_NIM_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_SLOW_IN_NIM_QW,
      ._desc = "Two input XOR gate, slowest input, non-inverting mode (second input tied low)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "XOR_TWO_FAST_IN_NIM",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_FAST_IN_NIM_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_FAST_IN_NIM_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_FAST_IN_NIM_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_FAST_IN_NIM_QW,
      ._desc = "Two input XOR gate, fastest input, non-inverting mode (second input tied low)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "XOR_TWO_SLOW_IN_IM",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_SLOW_IN_IM_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_SLOW_IN_IM_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_SLOW_IN_IM_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_SLOW_IN_IM_QW,
      ._desc = "Two input XOR gate, slowest input, inverting mode (second input tied high)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "XOR_TWO_FAST_IN_IM",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_FAST_IN_IM_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_FAST_IN_IM_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_FAST_IN_IM_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_XOR_TWO_FAST_IN_IM_QW,
      ._desc = "Two input XOR gate, fastest input, inverting mode (second input tied high)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NOR_TWO_SLOW_IN",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_NOR_TWO_SLOW_IN_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_NOR_TWO_SLOW_IN_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_NOR_TWO_SLOW_IN_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_NOR_TWO_SLOW_IN_QW,
      ._desc = "Two input NOR gate, slowest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NOR_TWO_FAST_IN",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_NOR_TWO_FAST_IN_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_NOR_TWO_FAST_IN_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_NOR_TWO_FAST_IN_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_NOR_TWO_FAST_IN_QW,
      ._desc = "Two input NOR gate, fastest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NAND_TWO_SLOW_IN",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_NAND_TWO_SLOW_IN_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_NAND_TWO_SLOW_IN_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_NAND_TWO_SLOW_IN_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_NAND_TWO_SLOW_IN_QW,
      ._desc = "Two input NAND gate, slowest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "NAND_TWO_FAST_IN",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_NAND_TWO_FAST_IN_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_NAND_TWO_FAST_IN_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_NAND_TWO_FAST_IN_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_NAND_TWO_FAST_IN_QW,
      ._desc = "Two input NAND gate, fastest input",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "INVERTER",
      ._bpos = AR_SERDES_PMRO_LO_VT_CONFIG_INVERTER_BP,
      ._mask = AR_SERDES_PMRO_LO_VT_CONFIG_INVERTER_MASK,
      ._rval = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA & AR_SERDES_PMRO_LO_VT_CONFIG_INVERTER_MASK,
      ._index = AR_SERDES_PMRO_LO_VT_CONFIG_INVERTER_QW,
      ._desc = "Inverter",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_pmro_ref_clk_cntr_detail[] = {
    { ._name = "RESERVED_31_16",
      ._bpos = AR_SERDES_PMRO_REF_CLK_CNTR_RESERVED_31_16_BP,
      ._mask = AR_SERDES_PMRO_REF_CLK_CNTR_RESERVED_31_16_MASK,
      ._rval = AR_SERDES_PMRO_REF_CLK_CNTR_RSTDATA & AR_SERDES_PMRO_REF_CLK_CNTR_RESERVED_31_16_MASK,
      ._index = AR_SERDES_PMRO_REF_CLK_CNTR_RESERVED_31_16_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "COUNTER_VALUE",
      ._bpos = AR_SERDES_PMRO_REF_CLK_CNTR_COUNTER_VALUE_BP,
      ._mask = AR_SERDES_PMRO_REF_CLK_CNTR_COUNTER_VALUE_MASK,
      ._rval = AR_SERDES_PMRO_REF_CLK_CNTR_RSTDATA & AR_SERDES_PMRO_REF_CLK_CNTR_COUNTER_VALUE_MASK,
      ._index = AR_SERDES_PMRO_REF_CLK_CNTR_COUNTER_VALUE_QW,
      ._desc = "Counter initial value",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_pmro_osc_cntr_detail[] = {
    { ._name = "RESERVED_31_16",
      ._bpos = AR_SERDES_PMRO_OSC_CNTR_RESERVED_31_16_BP,
      ._mask = AR_SERDES_PMRO_OSC_CNTR_RESERVED_31_16_MASK,
      ._rval = AR_SERDES_PMRO_OSC_CNTR_RSTDATA & AR_SERDES_PMRO_OSC_CNTR_RESERVED_31_16_MASK,
      ._index = AR_SERDES_PMRO_OSC_CNTR_RESERVED_31_16_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "OSC_COUNT",
      ._bpos = AR_SERDES_PMRO_OSC_CNTR_OSC_COUNT_BP,
      ._mask = AR_SERDES_PMRO_OSC_CNTR_OSC_COUNT_MASK,
      ._rval = AR_SERDES_PMRO_OSC_CNTR_RSTDATA & AR_SERDES_PMRO_OSC_CNTR_OSC_COUNT_MASK,
      ._index = AR_SERDES_PMRO_OSC_CNTR_OSC_COUNT_QW,
      ._desc = "Initialization value",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_pmro_unimplemented_detail[] = {
    { ._name = "RESERVED_31_0",
      ._bpos = AR_SERDES_PMRO_UNIMPLEMENTED_RESERVED_31_0_BP,
      ._mask = AR_SERDES_PMRO_UNIMPLEMENTED_RESERVED_31_0_MASK,
      ._rval = AR_SERDES_PMRO_UNIMPLEMENTED_RSTDATA & AR_SERDES_PMRO_UNIMPLEMENTED_RESERVED_31_0_MASK,
      ._index = AR_SERDES_PMRO_UNIMPLEMENTED_RESERVED_31_0_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_pmro_sbus_id_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_PMRO_SBUS_ID_RESERVED_31_8_BP,
      ._mask = AR_SERDES_PMRO_SBUS_ID_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_PMRO_SBUS_ID_RSTDATA & AR_SERDES_PMRO_SBUS_ID_RESERVED_31_8_MASK,
      ._index = AR_SERDES_PMRO_SBUS_ID_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "SBUS_ID",
      ._bpos = AR_SERDES_PMRO_SBUS_ID_SBUS_ID_BP,
      ._mask = AR_SERDES_PMRO_SBUS_ID_SBUS_ID_MASK,
      ._rval = AR_SERDES_PMRO_SBUS_ID_RSTDATA & AR_SERDES_PMRO_SBUS_ID_SBUS_ID_MASK,
      ._index = AR_SERDES_PMRO_SBUS_ID_SBUS_ID_QW,
      ._desc = "Identifier for PMRO block",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_00_detail[] = {
    { ._name = "RESERVED_31_2",
      ._bpos = AR_SERDES_SBUS_CTRL_00_RESERVED_31_2_BP,
      ._mask = AR_SERDES_SBUS_CTRL_00_RESERVED_31_2_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_00_RSTDATA & AR_SERDES_SBUS_CTRL_00_RESERVED_31_2_MASK,
      ._index = AR_SERDES_SBUS_CTRL_00_RESERVED_31_2_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "CISM_LOOP",
      ._bpos = AR_SERDES_SBUS_CTRL_00_CISM_LOOP_BP,
      ._mask = AR_SERDES_SBUS_CTRL_00_CISM_LOOP_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_00_RSTDATA & AR_SERDES_SBUS_CTRL_00_CISM_LOOP_MASK,
      ._index = AR_SERDES_SBUS_CTRL_00_CISM_LOOP_QW,
      ._desc = "Enable CISM to continuously loop",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "CISM_START",
      ._bpos = AR_SERDES_SBUS_CTRL_00_CISM_START_BP,
      ._mask = AR_SERDES_SBUS_CTRL_00_CISM_START_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_00_RSTDATA & AR_SERDES_SBUS_CTRL_00_CISM_START_MASK,
      ._index = AR_SERDES_SBUS_CTRL_00_CISM_START_QW,
      ._desc = "Start the CISM state machine",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_01_detail[] = {
    { ._name = "RESERVED_31_5",
      ._bpos = AR_SERDES_SBUS_CTRL_01_RESERVED_31_5_BP,
      ._mask = AR_SERDES_SBUS_CTRL_01_RESERVED_31_5_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_01_RSTDATA & AR_SERDES_SBUS_CTRL_01_RESERVED_31_5_MASK,
      ._index = AR_SERDES_SBUS_CTRL_01_RESERVED_31_5_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "CISM_TIMER_VALUE",
      ._bpos = AR_SERDES_SBUS_CTRL_01_CISM_TIMER_VALUE_BP,
      ._mask = AR_SERDES_SBUS_CTRL_01_CISM_TIMER_VALUE_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_01_RSTDATA & AR_SERDES_SBUS_CTRL_01_CISM_TIMER_VALUE_MASK,
      ._index = AR_SERDES_SBUS_CTRL_01_CISM_TIMER_VALUE_QW,
      ._desc = "Number of SBus clock cycles between CISM commands (cycles=2^timer value)",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_02_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_02_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_02_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_02_RSTDATA & AR_SERDES_SBUS_CTRL_02_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_02_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "LAST_SBUS_ADDRESS",
      ._bpos = AR_SERDES_SBUS_CTRL_02_LAST_SBUS_ADDRESS_BP,
      ._mask = AR_SERDES_SBUS_CTRL_02_LAST_SBUS_ADDRESS_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_02_RSTDATA & AR_SERDES_SBUS_CTRL_02_LAST_SBUS_ADDRESS_MASK,
      ._index = AR_SERDES_SBUS_CTRL_02_LAST_SBUS_ADDRESS_QW,
      ._desc = "Value of sbus_address_in",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "R"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_0a_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_0A_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_0A_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_0A_RSTDATA & AR_SERDES_SBUS_CTRL_0A_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_0A_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "CLOCK_DIVIDER_SETTING0",
      ._bpos = AR_SERDES_SBUS_CTRL_0A_CLOCK_DIVIDER_SETTING0_BP,
      ._mask = AR_SERDES_SBUS_CTRL_0A_CLOCK_DIVIDER_SETTING0_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_0A_RSTDATA & AR_SERDES_SBUS_CTRL_0A_CLOCK_DIVIDER_SETTING0_MASK,
      ._index = AR_SERDES_SBUS_CTRL_0A_CLOCK_DIVIDER_SETTING0_QW,
      ._desc = "Enable non2^n clock divider",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "CLOCK_DIVIDER_SETTING1",
      ._bpos = AR_SERDES_SBUS_CTRL_0A_CLOCK_DIVIDER_SETTING1_BP,
      ._mask = AR_SERDES_SBUS_CTRL_0A_CLOCK_DIVIDER_SETTING1_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_0A_RSTDATA & AR_SERDES_SBUS_CTRL_0A_CLOCK_DIVIDER_SETTING1_MASK,
      ._index = AR_SERDES_SBUS_CTRL_0A_CLOCK_DIVIDER_SETTING1_QW,
      ._desc = "Divider value",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_0b_detail[] = {
    { ._name = "RESERVED_31_12",
      ._bpos = AR_SERDES_SBUS_CTRL_0B_RESERVED_31_12_BP,
      ._mask = AR_SERDES_SBUS_CTRL_0B_RESERVED_31_12_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_0B_RSTDATA & AR_SERDES_SBUS_CTRL_0B_RESERVED_31_12_MASK,
      ._index = AR_SERDES_SBUS_CTRL_0B_RESERVED_31_12_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "CLOCK_DIVIDER_RESET_VALUE",
      ._bpos = AR_SERDES_SBUS_CTRL_0B_CLOCK_DIVIDER_RESET_VALUE_BP,
      ._mask = AR_SERDES_SBUS_CTRL_0B_CLOCK_DIVIDER_RESET_VALUE_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_0B_RSTDATA & AR_SERDES_SBUS_CTRL_0B_CLOCK_DIVIDER_RESET_VALUE_MASK,
      ._index = AR_SERDES_SBUS_CTRL_0B_CLOCK_DIVIDER_RESET_VALUE_QW,
      ._desc = "Value at which the clock divider resets if bit 7 of address 0x0A is set",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_0c_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_0C_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_0C_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_0C_RSTDATA & AR_SERDES_SBUS_CTRL_0C_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_0C_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "CISM_LOOP",
      ._bpos = AR_SERDES_SBUS_CTRL_0C_CISM_LOOP_BP,
      ._mask = AR_SERDES_SBUS_CTRL_0C_CISM_LOOP_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_0C_RSTDATA & AR_SERDES_SBUS_CTRL_0C_CISM_LOOP_MASK,
      ._index = AR_SERDES_SBUS_CTRL_0C_CISM_LOOP_QW,
      ._desc = "Access to bits 7:0 of address 0x0B",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_0d_detail[] = {
    { ._name = "RESERVED_31_4",
      ._bpos = AR_SERDES_SBUS_CTRL_0D_RESERVED_31_4_BP,
      ._mask = AR_SERDES_SBUS_CTRL_0D_RESERVED_31_4_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_0D_RSTDATA & AR_SERDES_SBUS_CTRL_0D_RESERVED_31_4_MASK,
      ._index = AR_SERDES_SBUS_CTRL_0D_RESERVED_31_4_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "CLOCK_DIVIDER_RESET_VALUE_PAGE1",
      ._bpos = AR_SERDES_SBUS_CTRL_0D_CLOCK_DIVIDER_RESET_VALUE_PAGE1_BP,
      ._mask = AR_SERDES_SBUS_CTRL_0D_CLOCK_DIVIDER_RESET_VALUE_PAGE1_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_0D_RSTDATA & AR_SERDES_SBUS_CTRL_0D_CLOCK_DIVIDER_RESET_VALUE_PAGE1_MASK,
      ._index = AR_SERDES_SBUS_CTRL_0D_CLOCK_DIVIDER_RESET_VALUE_PAGE1_QW,
      ._desc = "Access to bits 11:8 of address 0x0B",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_10_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_10_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_10_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_10_RSTDATA & AR_SERDES_SBUS_CTRL_10_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_10_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "CISM_SBUS_RX_ADDRESS",
      ._bpos = AR_SERDES_SBUS_CTRL_10_CISM_SBUS_RX_ADDRESS_BP,
      ._mask = AR_SERDES_SBUS_CTRL_10_CISM_SBUS_RX_ADDRESS_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_10_RSTDATA & AR_SERDES_SBUS_CTRL_10_CISM_SBUS_RX_ADDRESS_MASK,
      ._index = AR_SERDES_SBUS_CTRL_10_CISM_SBUS_RX_ADDRESS_QW,
      ._desc = "Rx address used in CISM commands",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_11_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_11_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_11_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_11_RSTDATA & AR_SERDES_SBUS_CTRL_11_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_11_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "CISM_COMMAND_1",
      ._bpos = AR_SERDES_SBUS_CTRL_11_CISM_COMMAND_1_BP,
      ._mask = AR_SERDES_SBUS_CTRL_11_CISM_COMMAND_1_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_11_RSTDATA & AR_SERDES_SBUS_CTRL_11_CISM_COMMAND_1_MASK,
      ._index = AR_SERDES_SBUS_CTRL_11_CISM_COMMAND_1_QW,
      ._desc = "Command field for first command",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_12_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_12_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_12_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_12_RSTDATA & AR_SERDES_SBUS_CTRL_12_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_12_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "CISM_DATA_ADDRESS_1",
      ._bpos = AR_SERDES_SBUS_CTRL_12_CISM_DATA_ADDRESS_1_BP,
      ._mask = AR_SERDES_SBUS_CTRL_12_CISM_DATA_ADDRESS_1_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_12_RSTDATA & AR_SERDES_SBUS_CTRL_12_CISM_DATA_ADDRESS_1_MASK,
      ._index = AR_SERDES_SBUS_CTRL_12_CISM_DATA_ADDRESS_1_QW,
      ._desc = "Data address for first command",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_13_detail[] = {
    { ._name = "CISM_DATA_WORD_1",
      ._bpos = AR_SERDES_SBUS_CTRL_13_CISM_DATA_WORD_1_BP,
      ._mask = AR_SERDES_SBUS_CTRL_13_CISM_DATA_WORD_1_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_13_RSTDATA & AR_SERDES_SBUS_CTRL_13_CISM_DATA_WORD_1_MASK,
      ._index = AR_SERDES_SBUS_CTRL_13_CISM_DATA_WORD_1_QW,
      ._desc = "Data word for first command",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_14_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_14_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_14_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_14_RSTDATA & AR_SERDES_SBUS_CTRL_14_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_14_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "CISM_COMMAND_2",
      ._bpos = AR_SERDES_SBUS_CTRL_14_CISM_COMMAND_2_BP,
      ._mask = AR_SERDES_SBUS_CTRL_14_CISM_COMMAND_2_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_14_RSTDATA & AR_SERDES_SBUS_CTRL_14_CISM_COMMAND_2_MASK,
      ._index = AR_SERDES_SBUS_CTRL_14_CISM_COMMAND_2_QW,
      ._desc = "Command field for second command",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_15_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_15_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_15_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_15_RSTDATA & AR_SERDES_SBUS_CTRL_15_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_15_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "CISM_DATA_ADDRESS_2",
      ._bpos = AR_SERDES_SBUS_CTRL_15_CISM_DATA_ADDRESS_2_BP,
      ._mask = AR_SERDES_SBUS_CTRL_15_CISM_DATA_ADDRESS_2_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_15_RSTDATA & AR_SERDES_SBUS_CTRL_15_CISM_DATA_ADDRESS_2_MASK,
      ._index = AR_SERDES_SBUS_CTRL_15_CISM_DATA_ADDRESS_2_QW,
      ._desc = "Data address for second command",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_16_detail[] = {
    { ._name = "CISM_DATA_WORD_2",
      ._bpos = AR_SERDES_SBUS_CTRL_16_CISM_DATA_WORD_2_BP,
      ._mask = AR_SERDES_SBUS_CTRL_16_CISM_DATA_WORD_2_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_16_RSTDATA & AR_SERDES_SBUS_CTRL_16_CISM_DATA_WORD_2_MASK,
      ._index = AR_SERDES_SBUS_CTRL_16_CISM_DATA_WORD_2_QW,
      ._desc = "Data word for second command",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_20_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_20_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_20_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_20_RSTDATA & AR_SERDES_SBUS_CTRL_20_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_20_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "BSB_SELECT",
      ._bpos = AR_SERDES_SBUS_CTRL_20_BSB_SELECT_BP,
      ._mask = AR_SERDES_SBUS_CTRL_20_BSB_SELECT_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_20_RSTDATA & AR_SERDES_SBUS_CTRL_20_BSB_SELECT_MASK,
      ._index = AR_SERDES_SBUS_CTRL_20_BSB_SELECT_QW,
      ._desc = "Selects interface: 0=TAP, 1=SPARE",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = "BSB_CONTROL",
      ._bpos = AR_SERDES_SBUS_CTRL_20_BSB_CONTROL_BP,
      ._mask = AR_SERDES_SBUS_CTRL_20_BSB_CONTROL_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_20_RSTDATA & AR_SERDES_SBUS_CTRL_20_BSB_CONTROL_MASK,
      ._index = AR_SERDES_SBUS_CTRL_20_BSB_CONTROL_QW,
      ._desc = "Selects data_out bit",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_80_detail[] = {
    { ._name = "GENERIC_WRITE",
      ._bpos = AR_SERDES_SBUS_CTRL_80_GENERIC_WRITE_BP,
      ._mask = AR_SERDES_SBUS_CTRL_80_GENERIC_WRITE_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_80_RSTDATA & AR_SERDES_SBUS_CTRL_80_GENERIC_WRITE_MASK,
      ._index = AR_SERDES_SBUS_CTRL_80_GENERIC_WRITE_QW,
      ._desc = "32-bit field driven out of SBus Controller output port sbus_0xfe_0x80_out[31:0]",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_81_detail[] = {
    { ._name = "RESERVED_31_0",
      ._bpos = AR_SERDES_SBUS_CTRL_81_RESERVED_31_0_BP,
      ._mask = AR_SERDES_SBUS_CTRL_81_RESERVED_31_0_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_81_RSTDATA & AR_SERDES_SBUS_CTRL_81_RESERVED_31_0_MASK,
      ._index = AR_SERDES_SBUS_CTRL_81_RESERVED_31_0_QW,
      ._desc = "32-bit field read by SBus Controller intput port sbus_0xfe_0x81_in[31:0]",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_82_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_82_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_82_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_82_RSTDATA & AR_SERDES_SBUS_CTRL_82_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_82_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "GENERIC_WRITE_PAGE0",
      ._bpos = AR_SERDES_SBUS_CTRL_82_GENERIC_WRITE_PAGE0_BP,
      ._mask = AR_SERDES_SBUS_CTRL_82_GENERIC_WRITE_PAGE0_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_82_RSTDATA & AR_SERDES_SBUS_CTRL_82_GENERIC_WRITE_PAGE0_MASK,
      ._index = AR_SERDES_SBUS_CTRL_82_GENERIC_WRITE_PAGE0_QW,
      ._desc = "Access to bits 7:0 of Address 0x80",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_83_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_83_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_83_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_83_RSTDATA & AR_SERDES_SBUS_CTRL_83_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_83_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "GENERIC_WRITE_PAGE1",
      ._bpos = AR_SERDES_SBUS_CTRL_83_GENERIC_WRITE_PAGE1_BP,
      ._mask = AR_SERDES_SBUS_CTRL_83_GENERIC_WRITE_PAGE1_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_83_RSTDATA & AR_SERDES_SBUS_CTRL_83_GENERIC_WRITE_PAGE1_MASK,
      ._index = AR_SERDES_SBUS_CTRL_83_GENERIC_WRITE_PAGE1_QW,
      ._desc = "Access to bits 15:8 of Address 0x80",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_84_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_84_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_84_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_84_RSTDATA & AR_SERDES_SBUS_CTRL_84_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_84_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "GENERIC_WRITE_PAGE2",
      ._bpos = AR_SERDES_SBUS_CTRL_84_GENERIC_WRITE_PAGE2_BP,
      ._mask = AR_SERDES_SBUS_CTRL_84_GENERIC_WRITE_PAGE2_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_84_RSTDATA & AR_SERDES_SBUS_CTRL_84_GENERIC_WRITE_PAGE2_MASK,
      ._index = AR_SERDES_SBUS_CTRL_84_GENERIC_WRITE_PAGE2_QW,
      ._desc = "Access to bits 23:16 of Address 0x80",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_85_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_85_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_85_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_85_RSTDATA & AR_SERDES_SBUS_CTRL_85_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_85_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "GENERIC_WRITE_PAGE3",
      ._bpos = AR_SERDES_SBUS_CTRL_85_GENERIC_WRITE_PAGE3_BP,
      ._mask = AR_SERDES_SBUS_CTRL_85_GENERIC_WRITE_PAGE3_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_85_RSTDATA & AR_SERDES_SBUS_CTRL_85_GENERIC_WRITE_PAGE3_MASK,
      ._index = AR_SERDES_SBUS_CTRL_85_GENERIC_WRITE_PAGE3_QW,
      ._desc = "Access to bits 31:42 of Address 0x80",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RW"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_86_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_86_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_86_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_86_RSTDATA & AR_SERDES_SBUS_CTRL_86_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_86_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "GENERIC_READ_PAGE0",
      ._bpos = AR_SERDES_SBUS_CTRL_86_GENERIC_READ_PAGE0_BP,
      ._mask = AR_SERDES_SBUS_CTRL_86_GENERIC_READ_PAGE0_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_86_RSTDATA & AR_SERDES_SBUS_CTRL_86_GENERIC_READ_PAGE0_MASK,
      ._index = AR_SERDES_SBUS_CTRL_86_GENERIC_READ_PAGE0_QW,
      ._desc = "Access to bits 7:0 of Address 0x81",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_87_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_87_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_87_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_87_RSTDATA & AR_SERDES_SBUS_CTRL_87_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_87_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "GENERIC_READ_PAGE1",
      ._bpos = AR_SERDES_SBUS_CTRL_87_GENERIC_READ_PAGE1_BP,
      ._mask = AR_SERDES_SBUS_CTRL_87_GENERIC_READ_PAGE1_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_87_RSTDATA & AR_SERDES_SBUS_CTRL_87_GENERIC_READ_PAGE1_MASK,
      ._index = AR_SERDES_SBUS_CTRL_87_GENERIC_READ_PAGE1_QW,
      ._desc = "Access to bits 15:8 of Address 0x81",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_88_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_88_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_88_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_88_RSTDATA & AR_SERDES_SBUS_CTRL_88_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_88_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "GENERIC_READ_PAGE2",
      ._bpos = AR_SERDES_SBUS_CTRL_88_GENERIC_READ_PAGE2_BP,
      ._mask = AR_SERDES_SBUS_CTRL_88_GENERIC_READ_PAGE2_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_88_RSTDATA & AR_SERDES_SBUS_CTRL_88_GENERIC_READ_PAGE2_MASK,
      ._index = AR_SERDES_SBUS_CTRL_88_GENERIC_READ_PAGE2_QW,
      ._desc = "Access to bits 23:16 of Address 0x81",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_89_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_89_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_89_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_89_RSTDATA & AR_SERDES_SBUS_CTRL_89_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_89_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "GENERIC_READ_PAGE3",
      ._bpos = AR_SERDES_SBUS_CTRL_89_GENERIC_READ_PAGE3_BP,
      ._mask = AR_SERDES_SBUS_CTRL_89_GENERIC_READ_PAGE3_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_89_RSTDATA & AR_SERDES_SBUS_CTRL_89_GENERIC_READ_PAGE3_MASK,
      ._index = AR_SERDES_SBUS_CTRL_89_GENERIC_READ_PAGE3_QW,
      ._desc = "Access to bits 31:24 of Address 0x81",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_fe_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_FE_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_FE_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_FE_RSTDATA & AR_SERDES_SBUS_CTRL_FE_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_FE_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "SBUS_ID",
      ._bpos = AR_SERDES_SBUS_CTRL_FE_SBUS_ID_BP,
      ._mask = AR_SERDES_SBUS_CTRL_FE_SBUS_ID_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_FE_RSTDATA & AR_SERDES_SBUS_CTRL_FE_SBUS_ID_MASK,
      ._index = AR_SERDES_SBUS_CTRL_FE_SBUS_ID_QW,
      ._desc = "SBus Controller ID code",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};
static const cmmr_fr_t __ar_serdes_sbus_ctrl_ff_detail[] = {
    { ._name = "RESERVED_31_8",
      ._bpos = AR_SERDES_SBUS_CTRL_FF_RESERVED_31_8_BP,
      ._mask = AR_SERDES_SBUS_CTRL_FF_RESERVED_31_8_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_FF_RSTDATA & AR_SERDES_SBUS_CTRL_FF_RESERVED_31_8_MASK,
      ._index = AR_SERDES_SBUS_CTRL_FF_RESERVED_31_8_QW,
      ._desc = "",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = "IP_IDCODE",
      ._bpos = AR_SERDES_SBUS_CTRL_FF_IP_IDCODE_BP,
      ._mask = AR_SERDES_SBUS_CTRL_FF_IP_IDCODE_MASK,
      ._rval = AR_SERDES_SBUS_CTRL_FF_RSTDATA & AR_SERDES_SBUS_CTRL_FF_IP_IDCODE_MASK,
      ._index = AR_SERDES_SBUS_CTRL_FF_IP_IDCODE_QW,
      ._desc = "IP ID code",
      ._type_bitmsk = 0x0000000000000000ull,
      ._access = "RO"
    },
    { ._name = NULL, ._bpos = 0, ._mask = 0, ._rval = 0, ._index = 0, ._desc = NULL, ._access = NULL }
};

/*
 *  AR SBUS DESC MASK ARRAYS DECLARATIONS
 */

/*
 *  AR SBUS MMR DECLARATIONS
 */
static const cmmr_br_t __ar_serdes_sbus_00 = {
    ._name = "AR_SERDES_SBUS_00",
    ._addr = AR_SERDES_SBUS_00,
    ._rval.val = AR_SERDES_SBUS_00_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_00_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_00_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_00_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_00_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_00_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_00_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_00_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_00_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_00_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_00_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_00_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_00_detail
};
static const cmmr_br_t __ar_serdes_sbus_01 = {
    ._name = "AR_SERDES_SBUS_01",
    ._addr = AR_SERDES_SBUS_01,
    ._rval.val = AR_SERDES_SBUS_01_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_01_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_01_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_01_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_01_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_01_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_01_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_01_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_01_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_01_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_01_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_01_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_01_detail
};
static const cmmr_br_t __ar_serdes_sbus_02 = {
    ._name = "AR_SERDES_SBUS_02",
    ._addr = AR_SERDES_SBUS_02,
    ._rval.val = AR_SERDES_SBUS_02_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_02_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_02_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_02_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_02_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_02_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_02_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_02_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_02_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_02_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_02_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_02_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_02_detail
};
static const cmmr_br_t __ar_serdes_sbus_03 = {
    ._name = "AR_SERDES_SBUS_03",
    ._addr = AR_SERDES_SBUS_03,
    ._rval.val = AR_SERDES_SBUS_03_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_03_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_03_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_03_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_03_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_03_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_03_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_03_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_03_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_03_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_03_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_03_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_03_detail
};
static const cmmr_br_t __ar_serdes_sbus_05 = {
    ._name = "AR_SERDES_SBUS_05",
    ._addr = AR_SERDES_SBUS_05,
    ._rval.val = AR_SERDES_SBUS_05_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_05_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_05_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_05_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_05_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_05_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_05_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_05_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_05_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_05_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_05_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_05_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_05_detail
};
static const cmmr_br_t __ar_serdes_sbus_06 = {
    ._name = "AR_SERDES_SBUS_06",
    ._addr = AR_SERDES_SBUS_06,
    ._rval.val = AR_SERDES_SBUS_06_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_06_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_06_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_06_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_06_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_06_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_06_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_06_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_06_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_06_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_06_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_06_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_06_detail
};
static const cmmr_br_t __ar_serdes_sbus_07 = {
    ._name = "AR_SERDES_SBUS_07",
    ._addr = AR_SERDES_SBUS_07,
    ._rval.val = AR_SERDES_SBUS_07_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_07_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_07_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_07_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_07_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_07_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_07_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_07_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_07_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_07_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_07_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_07_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_07_detail
};
static const cmmr_br_t __ar_serdes_sbus_0b = {
    ._name = "AR_SERDES_SBUS_0B",
    ._addr = AR_SERDES_SBUS_0B,
    ._rval.val = AR_SERDES_SBUS_0B_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_0B_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_0B_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_0B_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_0B_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_0B_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_0B_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_0B_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_0B_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_0B_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_0B_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_0B_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_0b_detail
};
static const cmmr_br_t __ar_serdes_sbus_3c = {
    ._name = "AR_SERDES_SBUS_3C",
    ._addr = AR_SERDES_SBUS_3C,
    ._rval.val = AR_SERDES_SBUS_3C_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_3C_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_3C_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_3C_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_3C_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_3C_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_3C_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_3C_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_3C_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_3C_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_3C_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_3C_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_3c_detail
};
static const cmmr_br_t __ar_serdes_sbus_3d = {
    ._name = "AR_SERDES_SBUS_3D",
    ._addr = AR_SERDES_SBUS_3D,
    ._rval.val = AR_SERDES_SBUS_3D_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_3D_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_3D_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_3D_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_3D_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_3D_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_3D_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_3D_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_3D_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_3D_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_3D_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_3D_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_3d_detail
};
static const cmmr_br_t __ar_serdes_sbus_3e = {
    ._name = "AR_SERDES_SBUS_3E",
    ._addr = AR_SERDES_SBUS_3E,
    ._rval.val = AR_SERDES_SBUS_3E_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_3E_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_3E_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_3E_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_3E_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_3E_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_3E_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_3E_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_3E_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_3E_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_3E_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_3E_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_3e_detail
};
static const cmmr_br_t __ar_serdes_sbus_3f = {
    ._name = "AR_SERDES_SBUS_3F",
    ._addr = AR_SERDES_SBUS_3F,
    ._rval.val = AR_SERDES_SBUS_3F_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_3F_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_3F_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_3F_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_3F_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_3F_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_3F_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_3F_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_3F_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_3F_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_3F_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_3F_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_3f_detail
};
static const cmmr_br_t __ar_serdes_sbus_40 = {
    ._name = "AR_SERDES_SBUS_40",
    ._addr = AR_SERDES_SBUS_40,
    ._rval.val = AR_SERDES_SBUS_40_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_40_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_40_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_40_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_40_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_40_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_40_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_40_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_40_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_40_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_40_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_40_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_40_detail
};
static const cmmr_br_t __ar_serdes_sbus_41 = {
    ._name = "AR_SERDES_SBUS_41",
    ._addr = AR_SERDES_SBUS_41,
    ._rval.val = AR_SERDES_SBUS_41_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_41_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_41_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_41_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_41_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_41_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_41_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_41_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_41_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_41_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_41_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_41_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_41_detail
};
static const cmmr_br_t __ar_serdes_sbus_50 = {
    ._name = "AR_SERDES_SBUS_50",
    ._addr = AR_SERDES_SBUS_50,
    ._rval.val = AR_SERDES_SBUS_50_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_50_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_50_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_50_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_50_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_50_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_50_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_50_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_50_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_50_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_50_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_50_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_50_detail
};
static const cmmr_br_t __ar_serdes_sbus_51 = {
    ._name = "AR_SERDES_SBUS_51",
    ._addr = AR_SERDES_SBUS_51,
    ._rval.val = AR_SERDES_SBUS_51_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_51_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_51_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_51_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_51_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_51_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_51_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_51_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_51_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_51_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_51_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_51_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_51_detail
};
static const cmmr_br_t __ar_serdes_sbus_52 = {
    ._name = "AR_SERDES_SBUS_52",
    ._addr = AR_SERDES_SBUS_52,
    ._rval.val = AR_SERDES_SBUS_52_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_52_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_52_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_52_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_52_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_52_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_52_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_52_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_52_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_52_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_52_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_52_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_52_detail
};
static const cmmr_br_t __ar_serdes_sbus_53 = {
    ._name = "AR_SERDES_SBUS_53",
    ._addr = AR_SERDES_SBUS_53,
    ._rval.val = AR_SERDES_SBUS_53_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_53_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_53_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_53_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_53_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_53_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_53_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_53_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_53_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_53_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_53_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_53_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_53_detail
};
static const cmmr_br_t __ar_serdes_sbus_54 = {
    ._name = "AR_SERDES_SBUS_54",
    ._addr = AR_SERDES_SBUS_54,
    ._rval.val = AR_SERDES_SBUS_54_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_54_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_54_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_54_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_54_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_54_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_54_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_54_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_54_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_54_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_54_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_54_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_54_detail
};
static const cmmr_br_t __ar_serdes_sbus_55 = {
    ._name = "AR_SERDES_SBUS_55",
    ._addr = AR_SERDES_SBUS_55,
    ._rval.val = AR_SERDES_SBUS_55_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_55_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_55_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_55_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_55_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_55_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_55_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_55_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_55_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_55_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_55_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_55_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_55_detail
};
static const cmmr_br_t __ar_serdes_sbus_56 = {
    ._name = "AR_SERDES_SBUS_56",
    ._addr = AR_SERDES_SBUS_56,
    ._rval.val = AR_SERDES_SBUS_56_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_56_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_56_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_56_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_56_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_56_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_56_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_56_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_56_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_56_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_56_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_56_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_56_detail
};
static const cmmr_br_t __ar_serdes_sbus_57 = {
    ._name = "AR_SERDES_SBUS_57",
    ._addr = AR_SERDES_SBUS_57,
    ._rval.val = AR_SERDES_SBUS_57_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_57_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_57_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_57_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_57_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_57_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_57_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_57_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_57_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_57_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_57_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_57_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_57_detail
};
static const cmmr_br_t __ar_serdes_sbus_58 = {
    ._name = "AR_SERDES_SBUS_58",
    ._addr = AR_SERDES_SBUS_58,
    ._rval.val = AR_SERDES_SBUS_58_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_58_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_58_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_58_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_58_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_58_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_58_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_58_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_58_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_58_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_58_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_58_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_58_detail
};
static const cmmr_br_t __ar_serdes_sbus_59 = {
    ._name = "AR_SERDES_SBUS_59",
    ._addr = AR_SERDES_SBUS_59,
    ._rval.val = AR_SERDES_SBUS_59_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_59_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_59_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_59_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_59_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_59_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_59_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_59_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_59_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_59_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_59_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_59_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_59_detail
};
static const cmmr_br_t __ar_serdes_sbus_5a = {
    ._name = "AR_SERDES_SBUS_5A",
    ._addr = AR_SERDES_SBUS_5A,
    ._rval.val = AR_SERDES_SBUS_5A_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_5A_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_5A_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_5A_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_5A_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_5A_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_5A_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_5A_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_5A_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_5A_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_5A_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_5A_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_5a_detail
};
static const cmmr_br_t __ar_serdes_sbus_5b = {
    ._name = "AR_SERDES_SBUS_5B",
    ._addr = AR_SERDES_SBUS_5B,
    ._rval.val = AR_SERDES_SBUS_5B_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_5B_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_5B_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_5B_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_5B_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_5B_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_5B_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_5B_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_5B_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_5B_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_5B_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_5B_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_5b_detail
};
static const cmmr_br_t __ar_serdes_sbus_64 = {
    ._name = "AR_SERDES_SBUS_64",
    ._addr = AR_SERDES_SBUS_64,
    ._rval.val = AR_SERDES_SBUS_64_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_64_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_64_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_64_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_64_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_64_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_64_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_64_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_64_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_64_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_64_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_64_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_64_detail
};
static const cmmr_br_t __ar_serdes_sbus_65 = {
    ._name = "AR_SERDES_SBUS_65",
    ._addr = AR_SERDES_SBUS_65,
    ._rval.val = AR_SERDES_SBUS_65_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_65_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_65_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_65_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_65_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_65_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_65_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_65_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_65_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_65_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_65_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_65_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_65_detail
};
static const cmmr_br_t __ar_serdes_sbus_67 = {
    ._name = "AR_SERDES_SBUS_67",
    ._addr = AR_SERDES_SBUS_67,
    ._rval.val = AR_SERDES_SBUS_67_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_67_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_67_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_67_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_67_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_67_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_67_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_67_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_67_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_67_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_67_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_67_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_67_detail
};
static const cmmr_br_t __ar_serdes_sbus_68 = {
    ._name = "AR_SERDES_SBUS_68",
    ._addr = AR_SERDES_SBUS_68,
    ._rval.val = AR_SERDES_SBUS_68_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_68_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_68_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_68_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_68_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_68_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_68_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_68_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_68_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_68_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_68_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_68_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_68_detail
};
static const cmmr_br_t __ar_serdes_sbus_69 = {
    ._name = "AR_SERDES_SBUS_69",
    ._addr = AR_SERDES_SBUS_69,
    ._rval.val = AR_SERDES_SBUS_69_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_69_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_69_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_69_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_69_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_69_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_69_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_69_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_69_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_69_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_69_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_69_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_69_detail
};
static const cmmr_br_t __ar_serdes_sbus_6a = {
    ._name = "AR_SERDES_SBUS_6A",
    ._addr = AR_SERDES_SBUS_6A,
    ._rval.val = AR_SERDES_SBUS_6A_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_6A_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_6A_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_6A_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_6A_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_6A_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_6A_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_6A_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_6A_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_6A_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_6A_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_6A_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_6a_detail
};
static const cmmr_br_t __ar_serdes_sbus_6b = {
    ._name = "AR_SERDES_SBUS_6B",
    ._addr = AR_SERDES_SBUS_6B,
    ._rval.val = AR_SERDES_SBUS_6B_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_6B_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_6B_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_6B_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_6B_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_6B_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_6B_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_6B_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_6B_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_6B_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_6B_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_6B_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_6b_detail
};
static const cmmr_br_t __ar_serdes_sbus_81 = {
    ._name = "AR_SERDES_SBUS_81",
    ._addr = AR_SERDES_SBUS_81,
    ._rval.val = AR_SERDES_SBUS_81_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_81_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_81_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_81_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_81_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_81_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_81_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_81_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_81_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_81_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_81_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_81_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_81_detail
};
static const cmmr_br_t __ar_serdes_sbus_82 = {
    ._name = "AR_SERDES_SBUS_82",
    ._addr = AR_SERDES_SBUS_82,
    ._rval.val = AR_SERDES_SBUS_82_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_82_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_82_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_82_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_82_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_82_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_82_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_82_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_82_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_82_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_82_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_82_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_82_detail
};
static const cmmr_br_t __ar_serdes_sbus_8c = {
    ._name = "AR_SERDES_SBUS_8C",
    ._addr = AR_SERDES_SBUS_8C,
    ._rval.val = AR_SERDES_SBUS_8C_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_8C_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_8C_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_8C_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_8C_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_8C_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_8C_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_8C_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_8C_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_8C_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_8C_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_8C_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_8c_detail
};
static const cmmr_br_t __ar_serdes_sbus_8e = {
    ._name = "AR_SERDES_SBUS_8E",
    ._addr = AR_SERDES_SBUS_8E,
    ._rval.val = AR_SERDES_SBUS_8E_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_8E_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_8E_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_8E_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_8E_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_8E_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_8E_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_8E_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_8E_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_8E_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_8E_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_8E_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_8e_detail
};
static const cmmr_br_t __ar_serdes_sbus_8f = {
    ._name = "AR_SERDES_SBUS_8F",
    ._addr = AR_SERDES_SBUS_8F,
    ._rval.val = AR_SERDES_SBUS_8F_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_8F_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_8F_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_8F_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_8F_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_8F_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_8F_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_8F_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_8F_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_8F_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_8F_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_8F_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_8f_detail
};
static const cmmr_br_t __ar_serdes_sbus_90 = {
    ._name = "AR_SERDES_SBUS_90",
    ._addr = AR_SERDES_SBUS_90,
    ._rval.val = AR_SERDES_SBUS_90_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_90_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_90_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_90_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_90_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_90_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_90_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_90_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_90_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_90_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_90_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_90_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_90_detail
};
static const cmmr_br_t __ar_serdes_sbus_92 = {
    ._name = "AR_SERDES_SBUS_92",
    ._addr = AR_SERDES_SBUS_92,
    ._rval.val = AR_SERDES_SBUS_92_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_92_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_92_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_92_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_92_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_92_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_92_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_92_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_92_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_92_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_92_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_92_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_92_detail
};
static const cmmr_br_t __ar_serdes_sbus_93 = {
    ._name = "AR_SERDES_SBUS_93",
    ._addr = AR_SERDES_SBUS_93,
    ._rval.val = AR_SERDES_SBUS_93_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_93_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_93_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_93_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_93_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_93_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_93_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_93_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_93_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_93_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_93_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_93_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_93_detail
};
static const cmmr_br_t __ar_serdes_sbus_95 = {
    ._name = "AR_SERDES_SBUS_95",
    ._addr = AR_SERDES_SBUS_95,
    ._rval.val = AR_SERDES_SBUS_95_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_95_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_95_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_95_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_95_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_95_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_95_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_95_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_95_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_95_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_95_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_95_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_95_detail
};
static const cmmr_br_t __ar_serdes_sbus_ad = {
    ._name = "AR_SERDES_SBUS_AD",
    ._addr = AR_SERDES_SBUS_AD,
    ._rval.val = AR_SERDES_SBUS_AD_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_AD_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_AD_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_AD_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_AD_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_AD_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_AD_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_AD_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_AD_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_AD_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_AD_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_AD_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ad_detail
};
static const cmmr_br_t __ar_serdes_sbus_ae = {
    ._name = "AR_SERDES_SBUS_AE",
    ._addr = AR_SERDES_SBUS_AE,
    ._rval.val = AR_SERDES_SBUS_AE_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_AE_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_AE_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_AE_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_AE_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_AE_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_AE_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_AE_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_AE_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_AE_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_AE_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_AE_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ae_detail
};
static const cmmr_br_t __ar_serdes_sbus_af = {
    ._name = "AR_SERDES_SBUS_AF",
    ._addr = AR_SERDES_SBUS_AF,
    ._rval.val = AR_SERDES_SBUS_AF_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_AF_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_AF_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_AF_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_AF_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_AF_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_AF_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_AF_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_AF_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_AF_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_AF_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_AF_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_af_detail
};
static const cmmr_br_t __ar_serdes_sbus_b3 = {
    ._name = "AR_SERDES_SBUS_B3",
    ._addr = AR_SERDES_SBUS_B3,
    ._rval.val = AR_SERDES_SBUS_B3_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_B3_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_B3_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_B3_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_B3_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_B3_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_B3_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_B3_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_B3_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_B3_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_B3_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_B3_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_b3_detail
};
static const cmmr_br_t __ar_serdes_sbus_fc = {
    ._name = "AR_SERDES_SBUS_FC",
    ._addr = AR_SERDES_SBUS_FC,
    ._rval.val = AR_SERDES_SBUS_FC_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_FC_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_FC_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_FC_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_FC_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_FC_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_FC_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_FC_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_FC_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_FC_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_FC_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_FC_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_fc_detail
};
static const cmmr_br_t __ar_serdes_sbus_fd = {
    ._name = "AR_SERDES_SBUS_FD",
    ._addr = AR_SERDES_SBUS_FD,
    ._rval.val = AR_SERDES_SBUS_FD_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_FD_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_FD_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_FD_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_FD_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_FD_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_FD_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_FD_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_FD_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_FD_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_FD_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_FD_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_fd_detail
};
static const cmmr_br_t __ar_serdes_sbus_fe = {
    ._name = "AR_SERDES_SBUS_FE",
    ._addr = AR_SERDES_SBUS_FE,
    ._rval.val = AR_SERDES_SBUS_FE_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_FE_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_FE_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_FE_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_FE_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_FE_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_FE_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_FE_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_FE_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_FE_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_FE_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_FE_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_fe_detail
};
static const cmmr_br_t __ar_serdes_sbus_ff = {
    ._name = "AR_SERDES_SBUS_FF",
    ._addr = AR_SERDES_SBUS_FF,
    ._rval.val = AR_SERDES_SBUS_FF_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_FF_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_FF_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_FF_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_FF_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_FF_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_FF_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_FF_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_FF_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_FF_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_FF_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_FF_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ff_detail
};
static const cmmr_br_t __ar_serdes_pmro_ctrl = {
    ._name = "AR_SERDES_PMRO_CTRL",
    ._addr = AR_SERDES_PMRO_CTRL,
    ._rval.val = AR_SERDES_PMRO_CTRL_RSTDATA,
    ._rmsk.val = AR_SERDES_PMRO_CTRL_RSTMASK,
    ._wrmsk.val = AR_SERDES_PMRO_CTRL_WRTMASK,
    ._rdmsk.val = AR_SERDES_PMRO_CTRL_RDMASK,
    ._xsmsk.val = AR_SERDES_PMRO_CTRL_XSMASK,
    ._wsemsk.val = AR_SERDES_PMRO_CTRL_WSEMASK,
    ._rsemsk.val = AR_SERDES_PMRO_CTRL_RSEMASK,
    ._w1smsk.val = AR_SERDES_PMRO_CTRL_W1SMASK,
    ._w1cmsk.val = AR_SERDES_PMRO_CTRL_W1CMASK,
    ._wrstmsk.val = AR_SERDES_PMRO_CTRL_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_PMRO_CTRL_HWWMASK,
    ._hwrmsk.val = AR_SERDES_PMRO_CTRL_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_pmro_ctrl_detail
};
static const cmmr_br_t __ar_serdes_pmro_std_vt_config = {
    ._name = "AR_SERDES_PMRO_STD_VT_CONFIG",
    ._addr = AR_SERDES_PMRO_STD_VT_CONFIG,
    ._rval.val = AR_SERDES_PMRO_STD_VT_CONFIG_RSTDATA,
    ._rmsk.val = AR_SERDES_PMRO_STD_VT_CONFIG_RSTMASK,
    ._wrmsk.val = AR_SERDES_PMRO_STD_VT_CONFIG_WRTMASK,
    ._rdmsk.val = AR_SERDES_PMRO_STD_VT_CONFIG_RDMASK,
    ._xsmsk.val = AR_SERDES_PMRO_STD_VT_CONFIG_XSMASK,
    ._wsemsk.val = AR_SERDES_PMRO_STD_VT_CONFIG_WSEMASK,
    ._rsemsk.val = AR_SERDES_PMRO_STD_VT_CONFIG_RSEMASK,
    ._w1smsk.val = AR_SERDES_PMRO_STD_VT_CONFIG_W1SMASK,
    ._w1cmsk.val = AR_SERDES_PMRO_STD_VT_CONFIG_W1CMASK,
    ._wrstmsk.val = AR_SERDES_PMRO_STD_VT_CONFIG_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_PMRO_STD_VT_CONFIG_HWWMASK,
    ._hwrmsk.val = AR_SERDES_PMRO_STD_VT_CONFIG_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_pmro_std_vt_config_detail
};
static const cmmr_br_t __ar_serdes_pmro_hi_vt_config = {
    ._name = "AR_SERDES_PMRO_HI_VT_CONFIG",
    ._addr = AR_SERDES_PMRO_HI_VT_CONFIG,
    ._rval.val = AR_SERDES_PMRO_HI_VT_CONFIG_RSTDATA,
    ._rmsk.val = AR_SERDES_PMRO_HI_VT_CONFIG_RSTMASK,
    ._wrmsk.val = AR_SERDES_PMRO_HI_VT_CONFIG_WRTMASK,
    ._rdmsk.val = AR_SERDES_PMRO_HI_VT_CONFIG_RDMASK,
    ._xsmsk.val = AR_SERDES_PMRO_HI_VT_CONFIG_XSMASK,
    ._wsemsk.val = AR_SERDES_PMRO_HI_VT_CONFIG_WSEMASK,
    ._rsemsk.val = AR_SERDES_PMRO_HI_VT_CONFIG_RSEMASK,
    ._w1smsk.val = AR_SERDES_PMRO_HI_VT_CONFIG_W1SMASK,
    ._w1cmsk.val = AR_SERDES_PMRO_HI_VT_CONFIG_W1CMASK,
    ._wrstmsk.val = AR_SERDES_PMRO_HI_VT_CONFIG_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_PMRO_HI_VT_CONFIG_HWWMASK,
    ._hwrmsk.val = AR_SERDES_PMRO_HI_VT_CONFIG_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_pmro_hi_vt_config_detail
};
static const cmmr_br_t __ar_serdes_pmro_lo_vt_config = {
    ._name = "AR_SERDES_PMRO_LO_VT_CONFIG",
    ._addr = AR_SERDES_PMRO_LO_VT_CONFIG,
    ._rval.val = AR_SERDES_PMRO_LO_VT_CONFIG_RSTDATA,
    ._rmsk.val = AR_SERDES_PMRO_LO_VT_CONFIG_RSTMASK,
    ._wrmsk.val = AR_SERDES_PMRO_LO_VT_CONFIG_WRTMASK,
    ._rdmsk.val = AR_SERDES_PMRO_LO_VT_CONFIG_RDMASK,
    ._xsmsk.val = AR_SERDES_PMRO_LO_VT_CONFIG_XSMASK,
    ._wsemsk.val = AR_SERDES_PMRO_LO_VT_CONFIG_WSEMASK,
    ._rsemsk.val = AR_SERDES_PMRO_LO_VT_CONFIG_RSEMASK,
    ._w1smsk.val = AR_SERDES_PMRO_LO_VT_CONFIG_W1SMASK,
    ._w1cmsk.val = AR_SERDES_PMRO_LO_VT_CONFIG_W1CMASK,
    ._wrstmsk.val = AR_SERDES_PMRO_LO_VT_CONFIG_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_PMRO_LO_VT_CONFIG_HWWMASK,
    ._hwrmsk.val = AR_SERDES_PMRO_LO_VT_CONFIG_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_pmro_lo_vt_config_detail
};
static const cmmr_br_t __ar_serdes_pmro_ref_clk_cntr = {
    ._name = "AR_SERDES_PMRO_REF_CLK_CNTR",
    ._addr = AR_SERDES_PMRO_REF_CLK_CNTR,
    ._rval.val = AR_SERDES_PMRO_REF_CLK_CNTR_RSTDATA,
    ._rmsk.val = AR_SERDES_PMRO_REF_CLK_CNTR_RSTMASK,
    ._wrmsk.val = AR_SERDES_PMRO_REF_CLK_CNTR_WRTMASK,
    ._rdmsk.val = AR_SERDES_PMRO_REF_CLK_CNTR_RDMASK,
    ._xsmsk.val = AR_SERDES_PMRO_REF_CLK_CNTR_XSMASK,
    ._wsemsk.val = AR_SERDES_PMRO_REF_CLK_CNTR_WSEMASK,
    ._rsemsk.val = AR_SERDES_PMRO_REF_CLK_CNTR_RSEMASK,
    ._w1smsk.val = AR_SERDES_PMRO_REF_CLK_CNTR_W1SMASK,
    ._w1cmsk.val = AR_SERDES_PMRO_REF_CLK_CNTR_W1CMASK,
    ._wrstmsk.val = AR_SERDES_PMRO_REF_CLK_CNTR_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_PMRO_REF_CLK_CNTR_HWWMASK,
    ._hwrmsk.val = AR_SERDES_PMRO_REF_CLK_CNTR_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_pmro_ref_clk_cntr_detail
};
static const cmmr_br_t __ar_serdes_pmro_osc_cntr = {
    ._name = "AR_SERDES_PMRO_OSC_CNTR",
    ._addr = AR_SERDES_PMRO_OSC_CNTR,
    ._rval.val = AR_SERDES_PMRO_OSC_CNTR_RSTDATA,
    ._rmsk.val = AR_SERDES_PMRO_OSC_CNTR_RSTMASK,
    ._wrmsk.val = AR_SERDES_PMRO_OSC_CNTR_WRTMASK,
    ._rdmsk.val = AR_SERDES_PMRO_OSC_CNTR_RDMASK,
    ._xsmsk.val = AR_SERDES_PMRO_OSC_CNTR_XSMASK,
    ._wsemsk.val = AR_SERDES_PMRO_OSC_CNTR_WSEMASK,
    ._rsemsk.val = AR_SERDES_PMRO_OSC_CNTR_RSEMASK,
    ._w1smsk.val = AR_SERDES_PMRO_OSC_CNTR_W1SMASK,
    ._w1cmsk.val = AR_SERDES_PMRO_OSC_CNTR_W1CMASK,
    ._wrstmsk.val = AR_SERDES_PMRO_OSC_CNTR_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_PMRO_OSC_CNTR_HWWMASK,
    ._hwrmsk.val = AR_SERDES_PMRO_OSC_CNTR_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_pmro_osc_cntr_detail
};
static const cmmr_br_t __ar_serdes_pmro_unimplemented = {
    ._name = "AR_SERDES_PMRO_UNIMPLEMENTED",
    ._addr = AR_SERDES_PMRO_UNIMPLEMENTED,
    ._rval.val = AR_SERDES_PMRO_UNIMPLEMENTED_RSTDATA,
    ._rmsk.val = AR_SERDES_PMRO_UNIMPLEMENTED_RSTMASK,
    ._wrmsk.val = AR_SERDES_PMRO_UNIMPLEMENTED_WRTMASK,
    ._rdmsk.val = AR_SERDES_PMRO_UNIMPLEMENTED_RDMASK,
    ._xsmsk.val = AR_SERDES_PMRO_UNIMPLEMENTED_XSMASK,
    ._wsemsk.val = AR_SERDES_PMRO_UNIMPLEMENTED_WSEMASK,
    ._rsemsk.val = AR_SERDES_PMRO_UNIMPLEMENTED_RSEMASK,
    ._w1smsk.val = AR_SERDES_PMRO_UNIMPLEMENTED_W1SMASK,
    ._w1cmsk.val = AR_SERDES_PMRO_UNIMPLEMENTED_W1CMASK,
    ._wrstmsk.val = AR_SERDES_PMRO_UNIMPLEMENTED_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_PMRO_UNIMPLEMENTED_HWWMASK,
    ._hwrmsk.val = AR_SERDES_PMRO_UNIMPLEMENTED_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_pmro_unimplemented_detail
};
static const cmmr_br_t __ar_serdes_pmro_sbus_id = {
    ._name = "AR_SERDES_PMRO_SBUS_ID",
    ._addr = AR_SERDES_PMRO_SBUS_ID,
    ._rval.val = AR_SERDES_PMRO_SBUS_ID_RSTDATA,
    ._rmsk.val = AR_SERDES_PMRO_SBUS_ID_RSTMASK,
    ._wrmsk.val = AR_SERDES_PMRO_SBUS_ID_WRTMASK,
    ._rdmsk.val = AR_SERDES_PMRO_SBUS_ID_RDMASK,
    ._xsmsk.val = AR_SERDES_PMRO_SBUS_ID_XSMASK,
    ._wsemsk.val = AR_SERDES_PMRO_SBUS_ID_WSEMASK,
    ._rsemsk.val = AR_SERDES_PMRO_SBUS_ID_RSEMASK,
    ._w1smsk.val = AR_SERDES_PMRO_SBUS_ID_W1SMASK,
    ._w1cmsk.val = AR_SERDES_PMRO_SBUS_ID_W1CMASK,
    ._wrstmsk.val = AR_SERDES_PMRO_SBUS_ID_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_PMRO_SBUS_ID_HWWMASK,
    ._hwrmsk.val = AR_SERDES_PMRO_SBUS_ID_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_pmro_sbus_id_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_00 = {
    ._name = "AR_SERDES_SBUS_CTRL_00",
    ._addr = AR_SERDES_SBUS_CTRL_00,
    ._rval.val = AR_SERDES_SBUS_CTRL_00_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_00_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_00_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_00_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_00_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_00_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_00_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_00_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_00_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_00_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_00_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_00_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_00_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_01 = {
    ._name = "AR_SERDES_SBUS_CTRL_01",
    ._addr = AR_SERDES_SBUS_CTRL_01,
    ._rval.val = AR_SERDES_SBUS_CTRL_01_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_01_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_01_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_01_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_01_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_01_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_01_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_01_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_01_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_01_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_01_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_01_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_01_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_02 = {
    ._name = "AR_SERDES_SBUS_CTRL_02",
    ._addr = AR_SERDES_SBUS_CTRL_02,
    ._rval.val = AR_SERDES_SBUS_CTRL_02_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_02_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_02_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_02_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_02_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_02_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_02_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_02_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_02_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_02_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_02_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_02_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_02_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_0a = {
    ._name = "AR_SERDES_SBUS_CTRL_0A",
    ._addr = AR_SERDES_SBUS_CTRL_0A,
    ._rval.val = AR_SERDES_SBUS_CTRL_0A_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_0A_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_0A_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_0A_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_0A_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_0A_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_0A_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_0A_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_0A_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_0A_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_0A_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_0A_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_0a_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_0b = {
    ._name = "AR_SERDES_SBUS_CTRL_0B",
    ._addr = AR_SERDES_SBUS_CTRL_0B,
    ._rval.val = AR_SERDES_SBUS_CTRL_0B_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_0B_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_0B_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_0B_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_0B_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_0B_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_0B_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_0B_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_0B_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_0B_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_0B_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_0B_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_0b_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_0c = {
    ._name = "AR_SERDES_SBUS_CTRL_0C",
    ._addr = AR_SERDES_SBUS_CTRL_0C,
    ._rval.val = AR_SERDES_SBUS_CTRL_0C_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_0C_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_0C_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_0C_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_0C_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_0C_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_0C_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_0C_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_0C_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_0C_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_0C_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_0C_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_0c_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_0d = {
    ._name = "AR_SERDES_SBUS_CTRL_0D",
    ._addr = AR_SERDES_SBUS_CTRL_0D,
    ._rval.val = AR_SERDES_SBUS_CTRL_0D_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_0D_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_0D_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_0D_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_0D_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_0D_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_0D_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_0D_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_0D_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_0D_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_0D_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_0D_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_0d_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_10 = {
    ._name = "AR_SERDES_SBUS_CTRL_10",
    ._addr = AR_SERDES_SBUS_CTRL_10,
    ._rval.val = AR_SERDES_SBUS_CTRL_10_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_10_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_10_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_10_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_10_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_10_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_10_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_10_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_10_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_10_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_10_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_10_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_10_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_11 = {
    ._name = "AR_SERDES_SBUS_CTRL_11",
    ._addr = AR_SERDES_SBUS_CTRL_11,
    ._rval.val = AR_SERDES_SBUS_CTRL_11_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_11_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_11_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_11_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_11_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_11_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_11_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_11_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_11_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_11_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_11_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_11_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_11_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_12 = {
    ._name = "AR_SERDES_SBUS_CTRL_12",
    ._addr = AR_SERDES_SBUS_CTRL_12,
    ._rval.val = AR_SERDES_SBUS_CTRL_12_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_12_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_12_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_12_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_12_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_12_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_12_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_12_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_12_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_12_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_12_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_12_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_12_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_13 = {
    ._name = "AR_SERDES_SBUS_CTRL_13",
    ._addr = AR_SERDES_SBUS_CTRL_13,
    ._rval.val = AR_SERDES_SBUS_CTRL_13_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_13_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_13_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_13_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_13_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_13_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_13_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_13_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_13_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_13_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_13_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_13_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_13_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_14 = {
    ._name = "AR_SERDES_SBUS_CTRL_14",
    ._addr = AR_SERDES_SBUS_CTRL_14,
    ._rval.val = AR_SERDES_SBUS_CTRL_14_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_14_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_14_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_14_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_14_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_14_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_14_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_14_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_14_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_14_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_14_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_14_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_14_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_15 = {
    ._name = "AR_SERDES_SBUS_CTRL_15",
    ._addr = AR_SERDES_SBUS_CTRL_15,
    ._rval.val = AR_SERDES_SBUS_CTRL_15_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_15_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_15_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_15_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_15_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_15_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_15_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_15_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_15_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_15_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_15_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_15_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_15_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_16 = {
    ._name = "AR_SERDES_SBUS_CTRL_16",
    ._addr = AR_SERDES_SBUS_CTRL_16,
    ._rval.val = AR_SERDES_SBUS_CTRL_16_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_16_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_16_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_16_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_16_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_16_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_16_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_16_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_16_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_16_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_16_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_16_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_16_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_20 = {
    ._name = "AR_SERDES_SBUS_CTRL_20",
    ._addr = AR_SERDES_SBUS_CTRL_20,
    ._rval.val = AR_SERDES_SBUS_CTRL_20_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_20_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_20_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_20_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_20_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_20_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_20_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_20_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_20_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_20_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_20_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_20_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_20_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_80 = {
    ._name = "AR_SERDES_SBUS_CTRL_80",
    ._addr = AR_SERDES_SBUS_CTRL_80,
    ._rval.val = AR_SERDES_SBUS_CTRL_80_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_80_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_80_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_80_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_80_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_80_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_80_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_80_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_80_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_80_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_80_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_80_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_80_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_81 = {
    ._name = "AR_SERDES_SBUS_CTRL_81",
    ._addr = AR_SERDES_SBUS_CTRL_81,
    ._rval.val = AR_SERDES_SBUS_CTRL_81_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_81_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_81_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_81_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_81_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_81_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_81_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_81_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_81_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_81_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_81_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_81_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_81_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_82 = {
    ._name = "AR_SERDES_SBUS_CTRL_82",
    ._addr = AR_SERDES_SBUS_CTRL_82,
    ._rval.val = AR_SERDES_SBUS_CTRL_82_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_82_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_82_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_82_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_82_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_82_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_82_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_82_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_82_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_82_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_82_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_82_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_82_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_83 = {
    ._name = "AR_SERDES_SBUS_CTRL_83",
    ._addr = AR_SERDES_SBUS_CTRL_83,
    ._rval.val = AR_SERDES_SBUS_CTRL_83_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_83_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_83_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_83_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_83_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_83_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_83_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_83_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_83_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_83_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_83_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_83_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_83_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_84 = {
    ._name = "AR_SERDES_SBUS_CTRL_84",
    ._addr = AR_SERDES_SBUS_CTRL_84,
    ._rval.val = AR_SERDES_SBUS_CTRL_84_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_84_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_84_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_84_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_84_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_84_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_84_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_84_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_84_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_84_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_84_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_84_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_84_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_85 = {
    ._name = "AR_SERDES_SBUS_CTRL_85",
    ._addr = AR_SERDES_SBUS_CTRL_85,
    ._rval.val = AR_SERDES_SBUS_CTRL_85_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_85_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_85_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_85_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_85_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_85_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_85_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_85_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_85_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_85_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_85_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_85_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_85_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_86 = {
    ._name = "AR_SERDES_SBUS_CTRL_86",
    ._addr = AR_SERDES_SBUS_CTRL_86,
    ._rval.val = AR_SERDES_SBUS_CTRL_86_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_86_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_86_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_86_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_86_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_86_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_86_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_86_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_86_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_86_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_86_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_86_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_86_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_87 = {
    ._name = "AR_SERDES_SBUS_CTRL_87",
    ._addr = AR_SERDES_SBUS_CTRL_87,
    ._rval.val = AR_SERDES_SBUS_CTRL_87_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_87_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_87_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_87_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_87_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_87_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_87_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_87_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_87_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_87_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_87_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_87_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_87_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_88 = {
    ._name = "AR_SERDES_SBUS_CTRL_88",
    ._addr = AR_SERDES_SBUS_CTRL_88,
    ._rval.val = AR_SERDES_SBUS_CTRL_88_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_88_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_88_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_88_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_88_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_88_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_88_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_88_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_88_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_88_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_88_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_88_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_88_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_89 = {
    ._name = "AR_SERDES_SBUS_CTRL_89",
    ._addr = AR_SERDES_SBUS_CTRL_89,
    ._rval.val = AR_SERDES_SBUS_CTRL_89_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_89_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_89_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_89_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_89_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_89_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_89_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_89_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_89_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_89_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_89_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_89_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_89_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_fe = {
    ._name = "AR_SERDES_SBUS_CTRL_FE",
    ._addr = AR_SERDES_SBUS_CTRL_FE,
    ._rval.val = AR_SERDES_SBUS_CTRL_FE_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_FE_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_FE_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_FE_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_FE_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_FE_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_FE_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_FE_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_FE_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_FE_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_FE_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_FE_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_fe_detail
};
static const cmmr_br_t __ar_serdes_sbus_ctrl_ff = {
    ._name = "AR_SERDES_SBUS_CTRL_FF",
    ._addr = AR_SERDES_SBUS_CTRL_FF,
    ._rval.val = AR_SERDES_SBUS_CTRL_FF_RSTDATA,
    ._rmsk.val = AR_SERDES_SBUS_CTRL_FF_RSTMASK,
    ._wrmsk.val = AR_SERDES_SBUS_CTRL_FF_WRTMASK,
    ._rdmsk.val = AR_SERDES_SBUS_CTRL_FF_RDMASK,
    ._xsmsk.val = AR_SERDES_SBUS_CTRL_FF_XSMASK,
    ._wsemsk.val = AR_SERDES_SBUS_CTRL_FF_WSEMASK,
    ._rsemsk.val = AR_SERDES_SBUS_CTRL_FF_RSEMASK,
    ._w1smsk.val = AR_SERDES_SBUS_CTRL_FF_W1SMASK,
    ._w1cmsk.val = AR_SERDES_SBUS_CTRL_FF_W1CMASK,
    ._wrstmsk.val = AR_SERDES_SBUS_CTRL_FF_WRSTMASK,
    ._hwwmsk.val = AR_SERDES_SBUS_CTRL_FF_HWWMASK,
    ._hwrmsk.val = AR_SERDES_SBUS_CTRL_FF_HWRMASK,
    ._nqw = 1,
    ._size = 8,
    ._incr = 0,
    ._depth = 1,
      ._type_bitmsk = 0x0000000000000000ull,
    ._info = __ar_serdes_sbus_ctrl_ff_detail
};

/*
 *  INSTALL AR SBUS MMRS
 */
static const cmmr_br_t* __ar_sbus_mmrs[] = {
    &__ar_serdes_sbus_00,
    &__ar_serdes_sbus_01,
    &__ar_serdes_sbus_02,
    &__ar_serdes_sbus_03,
    &__ar_serdes_sbus_05,
    &__ar_serdes_sbus_06,
    &__ar_serdes_sbus_07,
    &__ar_serdes_sbus_0b,
    &__ar_serdes_sbus_3c,
    &__ar_serdes_sbus_3d,
    &__ar_serdes_sbus_3e,
    &__ar_serdes_sbus_3f,
    &__ar_serdes_sbus_40,
    &__ar_serdes_sbus_41,
    &__ar_serdes_sbus_50,
    &__ar_serdes_sbus_51,
    &__ar_serdes_sbus_52,
    &__ar_serdes_sbus_53,
    &__ar_serdes_sbus_54,
    &__ar_serdes_sbus_55,
    &__ar_serdes_sbus_56,
    &__ar_serdes_sbus_57,
    &__ar_serdes_sbus_58,
    &__ar_serdes_sbus_59,
    &__ar_serdes_sbus_5a,
    &__ar_serdes_sbus_5b,
    &__ar_serdes_sbus_64,
    &__ar_serdes_sbus_65,
    &__ar_serdes_sbus_67,
    &__ar_serdes_sbus_68,
    &__ar_serdes_sbus_69,
    &__ar_serdes_sbus_6a,
    &__ar_serdes_sbus_6b,
    &__ar_serdes_sbus_81,
    &__ar_serdes_sbus_82,
    &__ar_serdes_sbus_8c,
    &__ar_serdes_sbus_8e,
    &__ar_serdes_sbus_8f,
    &__ar_serdes_sbus_90,
    &__ar_serdes_sbus_92,
    &__ar_serdes_sbus_93,
    &__ar_serdes_sbus_95,
    &__ar_serdes_sbus_ad,
    &__ar_serdes_sbus_ae,
    &__ar_serdes_sbus_af,
    &__ar_serdes_sbus_b3,
    &__ar_serdes_sbus_fc,
    &__ar_serdes_sbus_fd,
    &__ar_serdes_sbus_fe,
    &__ar_serdes_sbus_ff,
    &__ar_serdes_pmro_ctrl,
    &__ar_serdes_pmro_std_vt_config,
    &__ar_serdes_pmro_hi_vt_config,
    &__ar_serdes_pmro_lo_vt_config,
    &__ar_serdes_pmro_ref_clk_cntr,
    &__ar_serdes_pmro_osc_cntr,
    &__ar_serdes_pmro_unimplemented,
    &__ar_serdes_pmro_sbus_id,
    &__ar_serdes_sbus_ctrl_00,
    &__ar_serdes_sbus_ctrl_01,
    &__ar_serdes_sbus_ctrl_02,
    &__ar_serdes_sbus_ctrl_0a,
    &__ar_serdes_sbus_ctrl_0b,
    &__ar_serdes_sbus_ctrl_0c,
    &__ar_serdes_sbus_ctrl_0d,
    &__ar_serdes_sbus_ctrl_10,
    &__ar_serdes_sbus_ctrl_11,
    &__ar_serdes_sbus_ctrl_12,
    &__ar_serdes_sbus_ctrl_13,
    &__ar_serdes_sbus_ctrl_14,
    &__ar_serdes_sbus_ctrl_15,
    &__ar_serdes_sbus_ctrl_16,
    &__ar_serdes_sbus_ctrl_20,
    &__ar_serdes_sbus_ctrl_80,
    &__ar_serdes_sbus_ctrl_81,
    &__ar_serdes_sbus_ctrl_82,
    &__ar_serdes_sbus_ctrl_83,
    &__ar_serdes_sbus_ctrl_84,
    &__ar_serdes_sbus_ctrl_85,
    &__ar_serdes_sbus_ctrl_86,
    &__ar_serdes_sbus_ctrl_87,
    &__ar_serdes_sbus_ctrl_88,
    &__ar_serdes_sbus_ctrl_89,
    &__ar_serdes_sbus_ctrl_fe,
    &__ar_serdes_sbus_ctrl_ff,
    NULL
};

/*
 *  INSTALL AR SBUS LM MUX SELECT ENCODINGS
 */
static const cmmr_br_t* __ar_sbus_enc_mmrs[] = {
    NULL
};

#endif
